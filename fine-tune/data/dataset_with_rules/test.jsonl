{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function upper: The Jinja filter | upper is replaced by a function call: upper(variable).### Task Description:\nwrite a valid jinja template to convert variable \"city\" to uppercase and render it\n\n### Jinja Template (for reference):\n{{ city | upper }}\n\n### Blended Template:\n{{ upper(city) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Scoping: Variables set inside an if/else block must be declared before the block to be used outside of it.### Task Description:\nWrite a jinja template to set 'status' variable to \"active\" if user_online is true else set 'status' to \"inactive\". Render it after the conditional block\n\n### Jinja Template (for reference):\n{% if user_online %}\n  {% set status = \"active\" %}\n{% else %}\n  {% set status = \"inactive\" %}\n{% endif %}\n{{ status }}\n\n### Blended Template:\n{% set status = \"\" %}\n{% if user_online %}\n  {% set status = \"active\" %}\n{% else %}\n  {% set status = \"inactive\" %}\n{% endif %}\n{{ status }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function lower: The Jinja filter | lower is replaced by a function call: lower(variable).### Task Description:\nwrite a valid jinja template to convert variable \"email\" to lowercase and store in new_email variable\n\n### Jinja Template (for reference):\n{% set new_email = email | lower %}\n\n### Blended Template:\n{% set new_email = lower(email) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function upper: The Jinja filter | upper is replaced by a function call: upper(variable).### Task Description:\nwrite a valid jinja template to convert variable named \"name\" to upper and print it\n\n### Jinja Template (for reference):\n{{ name | upper }}\n\n### Blended Template:\n{% print upper(name) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function truncate: The Jinja filter | truncate is replaced by a function call: truncate(variable).### Task Description:\nwrite a valid jinja template to truncate variable \"weight\" and store in int_weight variable\n\n### Jinja Template (for reference):\n{% set int_weight = weight | truncate %}\n\n### Blended Template:\n{% set int_weight = truncate(weight) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function upper: The Jinja filter | upper is replaced by a function call: upper(variable).### Task Description:\nwrite a valid jinja template to convert \"hello world\" to uppercase and print it\n\n### Jinja Template (for reference):\n{{ \"hello world\" | upper }}\n\n### Blended Template:\n{% print upper(\"hello world\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n String Concatenation: The + operator is invalid for strings; use the tilde (~) operator instead (e.g., \"Hello\" ~ \"World\").### Task Description:\nwrite a jinja template which joins \"Happy\" and \"Birthday\" and print the result\n\n### Jinja Template (for reference):\n{{ \"Happy\" + \"Birthday\" }}\n\n### Blended Template:\n{% set result = \"Happy\" ~ \"Birthday\" %} {% print result %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n String Concatenation: The + operator is invalid for strings; use the tilde (~) operator instead (e.g., \"Hello\" ~ \"World\").### Task Description:\nwrite a jinja template which adds two strings : \"a\" and \"b\" and print the result\n\n### Jinja Template (for reference):\n{{ \"a\" + \"b\" }}\n\n### Blended Template:\n{% set result = \"a\" ~ \"b\" %} {% print result %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Print: The {% print ... %} statement only accepts a string or a number as input.### Task Description:\nWrite a jinja template to print the name \"Alice\" and age 25.\n\n### Jinja Template (for reference):\n{{ \"Alice\" }}   \n{{ 25 }}       \n\n### Blended Template:\n{% print \"Alice\" %}   \n{% print 25 %}       \n\n"}
