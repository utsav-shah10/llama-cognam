{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which combines variable \"greeting\" and \"name\" and print the result\n\n### Jinja Template:\n{{ greeting + name }}\n\n### Blended Template:\n{% set result = greeting ~ name %} {% print result %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nCreate a Jinja2 template that takes a list named scores = [85, 92, 78] and formats it into \"Test1(85), Test2(92), Test3(78)\" using string filter.\n\n### Jinja Template:\n{% set scores = [85, 92, 78] %}\n{{ scores|string(\"Test1(%s), Test2(%s), Test3(%s)\") }}\n\n### Blended Template:\n{% set scores = [85, 92, 78] %}\n{{ scores|string(\"Test1(%s), Test2(%s), Test3(%s)\") }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which concatenates \"Thank\" and \"You\" and print the result\n\n### Jinja Template:\n{{ \"Thank\" + \"You\" }}\n\n### Blended Template:\n{% set result = \"Thank\" ~ \"You\" %} {% print result %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"page_name\" to title case and print it.\n\n### Jinja Template:\n{{ page_name | title }}\n\n### Blended Template:\n{% print title(page_name) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nCreate a Jinja2 template that takes a list named colors = [\"red\", \"green\", \"blue\"] and formats it into \"Color1: red, Color2: green, Color3: blue\" using string filter.\n\n### Jinja Template:\n{% set colors = [\"red\", \"green\", \"blue\"] %}\n{{ colors|string(\"Color1: %s, Color2: %s, Color3: %s\") }}\n\n### Blended Template:\n{% set colors = [\"red\", \"green\", \"blue\"] %}\n{{ colors|string(\"Color1: %s, Color2: %s, Color3: %s\") }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to set 'status' variable to \"active\" if user_online is true else set 'status' to \"inactive\". Render it after the conditional block\n\n### Jinja Template:\n{% if user_online %}\n  {% set status = \"active\" %}\n{% else %}\n  {% set status = \"inactive\" %}\n{% endif %}\n{{ status }}\n\n### Blended Template:\n{% set status = \"\" %}\n{% if user_online %}\n  {% set status = \"active\" %}\n{% else %}\n  {% set status = \"inactive\" %}\n{% endif %}\n{{ status }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which adds two strings : \"a\" and \"b\" and print the result\n\n### Jinja Template:\n{{ \"a\" + \"b\" }}\n\n### Blended Template:\n{% set result = \"a\" ~ \"b\" %} {% print result %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print the name \"Alice\" and age 25.\n\n### Jinja Template:\n{{ \"Alice\" }}  // string\n{{ 25 }}      // number\n\n### Blended Template:\n{% print \"Alice\" %}  // string\n{% print 25 %}      // number"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"country\" to uppercase and store in caps_country variable\n\n### Jinja Template:\n{% set caps_country = country | upper %}\n\n### Blended Template:\n{% set caps_country = upper(country) %}"}
