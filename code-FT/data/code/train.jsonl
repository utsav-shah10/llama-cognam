{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to get the length of object variable settings and render it\n\n### Jinja Template:\n{{ settings | length }}\n\n### Blended Template:\n{{ length(settings) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"priority\" to \"high\" and render it after converting to upper case\n\n### Jinja Template:\n{% set priority = \"high\" %}\r\n{{ priority | upper }}\r\n\n\n### Blended Template:\n{% set priority = \"high\" %}\r\n{{ upper(priority) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert the string \"HELLO\" to lowercase and render it\n\n### Jinja Template:\n{{ \"HELLO\" | lower }}\n\n### Blended Template:\n{{ lower(\"HELLO\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"api endpoint\" to title case and render it\n\n### Jinja Template:\n{{ \"api endpoint\" | title }}\n\n### Blended Template:\n{{ title(\"api endpoint\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"title\" to uppercase and render it\n\n### Jinja Template:\n{{ title.upper() }}\n\n### Blended Template:\nError : Title is a reserved keyword in Blended. It cannot be used as variable nam\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"backup\" to \"automatic\" if scheduled is true, else \"manual\", then render \"Backup: \" + backup\n\n### Jinja Template:\n{% set backup = \"automatic\" if scheduled else \"manual\" %}\r\nBackup: {{ backup }}\n\n### Blended Template:\n{% set backup = \"\" %} {% if scheduled %} {% set backup = \"automatic\" %} {% else %} {% set backup = \"manual\" %} {% endif %} {{ \"Backup: \" ~ backup }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named show_error that takes message parameter and prints message in uppercase with ERROR:\n\n### Jinja Template:\n{% macro show_error(message) %}ERROR: {{ message | upper }}{% endmacro %}\n\n### Blended Template:\n{% macro show_error(message) %}{% print \"ERROR: \" ~ upper(message) %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_number that takes num parameter and returns truncated number\n\n### Jinja Template:\n{% macro format_number(num) %}{{ num | truncate }}{% endmacro %}\n\n### Blended Template:\n{% macro format_number(num) %}{{ truncate(num, 2) }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"BACKUP COMPLETED\" to title case, then set \"status_msg\" to result, then print it\n\n### Jinja Template:\n{% set status_msg = \"BACKUP COMPLETED\".title() %}\r\n{{status_msg }}\n\n### Blended Template:\n{% set status_msg = title(\"BACKUP COMPLETED\") %}\r\n{% print status_msg %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nprint the string \"Hello\"\n\n### Jinja Template:\n{{ \"Hello\" }}\n\n### Blended Template:\n{% print \"Hello\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate \"Version \" and \"2.0\" and print it\n\n### Jinja Template:\n{{ \"Version \" + \"2.0\" }}\n\n### Blended Template:\n{% set temp = \"Version\" ~  \"2.0\" %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"category\" to uppercase, then set \"section\" to result + \" ITEMS\", then print it\n\n### Jinja Template:\n{{ category.upper() + \" ITEMS\" }}\n\n### Blended Template:\n{% set section = upper(category) ~ \" ITEMS\" %} {% print section %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to calculate the mean of variable weights and print Mean weight: + result\n\n### Jinja Template:\n{% set temp = weights | mean %}Mean weight: {{ temp }}\n\n### Blended Template:\n{% set temp = mean(weights) %}Mean weight: {{ temp }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert the number 0 to string and store in \"zero_str\"\n\n### Jinja Template:\n{% set zero_str = 0 | string %}\n\n### Blended Template:\n{% set zero_str = 0 | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named footer and print Copyright 2024\n\n### Jinja Template:\n{% block footer %}Copyright 2024{% endblock %}\n\n### Blended Template:\n{% block footer %}{% print \"Copyright 2024\" %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nrender the string \"Welcome\"\n\n### Jinja Template:\n{{ \"Welcome\" }}\n\n### Blended Template:\n{{ \"Welcome\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"CONFIGURATION LOADED\" to title case, then set \"config_status\" to result, then render it\n\n### Jinja Template:\n{% set config_status = \"CONFIGURATION LOADED\" | title %}\r\n{{ config_status }}\n\n### Blended Template:\n{% set config_status = title(\"CONFIGURATION LOADED\") %} {{ config_status }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"priority\" to \"high\" if urgent is true, else \"normal\", then convert to uppercase and print it\n\n### Jinja Template:\n{% set priority = \"high\" if urgent else \"normal\" %}\r\n{{ priority.upper() }}\n\n### Blended Template:\n{% set priority = \"\" %} {% if urgent %} {% set priority = \"high\" %} {% else %} {% set priority = \"normal\" %} {% endif %} {% print upper(priority) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert the string \"world\" to uppercase and print it\n\n### Jinja Template:\n{{ \"world\" | upper }}\n\n### Blended Template:\n{% print upper(\"world\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_file_size that takes size parameter and adds MB\n\n### Jinja Template:\n{% macro format_file_size(size) %}{{ size }}MB{% endmacro %}\n\n### Blended Template:\n{% macro format_file_size(size) %}{{ size|string ~ \"MB\" }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable statuses and render each status if it equals active\n\n### Jinja Template:\n{% for status in statuses %}{% if status == active %}{{ status }}{% endif %}{% endfor %}\n\n### Blended Template:\n{% for status in statuses %}{% if status == active %}{{ status }}{% endif %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable colors and print each color with index\n\n### Jinja Template:\n{% for color in colors %}{{ loop.index }} {{ color }}{% endfor %}\n\n### Blended Template:\n{% for color in colors %} {% print (loop.index|string ~ color) %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named main and print Main content area\n\n### Jinja Template:\n{% block main %}Main content area{% endblock %}\n\n### Blended Template:\n{% block main %}{% print \"Main content area\" %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named show_version that takes version parameter and prints v + version\n\n### Jinja Template:\n{% macro show_version(version) %}v{{ version }}{% endmacro %}\n\n### Blended Template:\n{% macro show_version(version) %}{% print \"v\" ~ version %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert the number 0 to string and store in \"zero_str\"\n\n### Jinja Template:\n{% set zero_str = 0 | string %}\n\n### Blended Template:\n{% set zero_str = \"0\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate \"Hello\" and \"World\" and render the result\n\n### Jinja Template:\n{{ \"Hello\" ~ \"World\" }}\n\n### Blended Template:\n{{ \"Hello\" ~ \"World\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"result\" to \"pass\" if score >= 60, else \"fail\", then print it\n\n### Jinja Template:\n{% set result = \"pass\" if score >= 60 else \"fail\" %}\r\n{{ result }}\n\n### Blended Template:\n{% set result = \"\" %} {% if score >= 60 %} {% set result = \"pass\" %} {% else %} {% set result = \"fail\" %} {% endif %} {% print result %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to create a range from 3 to 8 and store in variable values then print Range: + length of values\n\n### Jinja Template:\n{% set values = range(3, 9) %}Range: {{ values | length }}\n\n### Blended Template:\n{% set values = range(3, 9) %} Range: {{ length(values) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named content and render variable page_content\n\n### Jinja Template:\n{% block content %}{{ page_content }}{% endblock %}\n\n### Blended Template:\n{% block content %}{{ page_content }}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named calculate_tax that takes amount and rate parameters, set tax_amount to amount * rate, return tax amount\n\n### Jinja Template:\n{% macro calculate_tax(amount, rate) %}{{ amount * rate }}{% endmacro %}\n\n### Blended Template:\n{% macro calculate_tax(amount, rate) %}{{ amount * rate }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to variable height and render it\n\n### Jinja Template:\n{{ height | floor }}\n\n### Blended Template:\n{{ floor(height) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named display_priority that takes priority parameter and shows in uppercase\n\n### Jinja Template:\n{% macro display_priority(priority) %}{{ priority | upper }}{% endmacro %}\n\n### Blended Template:\n{% macro display_priority(priority) %}{% print upper(priority) %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to get the length of variable \"config_options\" and render\"Total options: \" + result\n\n### Jinja Template:\n{% set temp =  config_options | length%}\r\nTotal options: {{temp}}\n\n### Blended Template:\n{% set temp =  \"Total options: \" ~ length(config_options) | string%}\r\n{{temp}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named tag_list that takes tags parameter and displays tags with #\n\n### Jinja Template:\n{% macro tag_list(tags) %}{% for tag in tags %}#{{ tag }} {% endfor %}{% endmacro %}\n\n### Blended Template:\n{% macro tag_list(tags) %}{% for tag in tags %}{% print \"#\" ~ tag ~ \" \" %}{% endfor %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"cache\" to \"enabled\" if performance_mode is true, else \"disabled\", then render \"Cache: \" + cache\n\n### Jinja Template:\n{% set cache = \"enabled\" if performance_mode else \"disabled\" %}\r\nCache: {{ cache }}\n\n### Blended Template:\n{% set cache = \"\" %} {% if performance_mode %} {% set cache = \"enabled\" %} {% else %} {% set cache = \"disabled\" %} {% endif %} {{ \"Cache: \" ~ cache }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"status\" to \"online\" if active is true, else \"offline\", then convert to uppercase and print it\n\n### Jinja Template:\n{% set status = 'online' if active else 'offline' %}\r\n{{ status.upper() }}\n\n### Blended Template:\n{% set status = \"\" %} {% if active%} {% set status = \"online\"%} {% else %} {% set status = \"offline\" %} {% endif %} {% print upper(status) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through array variable prices and print each price with $\n\n### Jinja Template:\n{% for price in prices %}${{ price }}{% endfor %}\n\n### Blended Template:\n{% for price in prices %} {% print \"$\" ~ price|string %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"ADMIN\" to lowercase and print it\n\n### Jinja Template:\n{{ \"ADMIN\" | lower }}\n\n### Blended Template:\n{% print lower(\"ADMIN\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named display_status that takes status parameter and prints status in uppercase\n\n### Jinja Template:\n{% macro display_status(status) %}{{ status | upper }}{% endmacro %}\n\n### Blended Template:\n{% macro display_status(status) %}{% print upper(status) %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nprint a variable named \"username\"\n\n### Jinja Template:\n{{ username }}\n\n### Blended Template:\n{% print username %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to calculate the mean of array variable values and print the result\n\n### Jinja Template:\n{{ values | mean }}\n\n### Blended Template:\n{% print mean(values) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through files and set size_mb by converting bytes to MB, set category to large if size_mb > 100 else small, render file.name + : + category\n\n### Jinja Template:\n{% for file in files %}{% set size_mb = file.size / (1024 * 1024) %}{% set category = \"large\" if size_mb > 100 else \"small\" %}{{ file.name }}: {{ category }}{% endfor %}\n\n### Blended Template:\n{% for file in files %}{% set category = \"\" %}{% set size_mb = file.size / (1024 * 1024) %}{% if size_mb > 100 %}{% set category = \"large\" %}{% else %}{% set category = \"small\" %}{% endif %}{{ file.name ~ \": \" ~  category }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named banner and print Special Offer Today!\n\n### Jinja Template:\n{% block banner %}Special Offer Today!{% endblock %}\n\n### Blended Template:\n{% block banner %}{% print \"Special Offer Today!\" %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through comments and set moderation_status to approved if comment.spam_score < 0.5 else flagged, render comment.id + : + moderation_status\n\n### Jinja Template:\n{% for comment in comments %}{% set moderation_status = \"approved\" if comment.spam_score < 0.5 else \"flagged\" %}{{ comment.id }}: {{ moderation_status }}{% endfor %}\n\n### Blended Template:\n{% for comment in comments %}{% set moderation_status = \"\" %}{% if comment.spam_score < 0.5 %}{% set moderation_status = \"approved\" %}{% else %}{% set moderation_status = \"flagged\" %}{% endif %}{{ comment.id }}: {{ moderation_status }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"synchronization\" to \"enabled\" if sync_mode is true, else \"disabled\", then print \"Sync: \" + synchronization\n\n### Jinja Template:\n{% set synchronization = \"enabled\" if sync_mode else \"disabled\" %}\r\nSync: {{ synchronization }}\n\n### Blended Template:\n{% set synchronization = \"\" %} {% if sync_mode %} {% set synchronization = \"enabled\" %} {% else %} {% set synchronization = \"disabled\" %} {% endif %} {% set temp = \"Sync: \" ~ synchronization %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named pagination and render variable page_links\n\n### Jinja Template:\n{% block pagination %}{{ page_links }}{% endblock %}\n\n### Blended Template:\n{% block pagination %}{{ page_links }}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"PROCESS COMPLETED\" to title case, then set \"completion_msg\" to result, then render it\n\n### Jinja Template:\n{% set completion_msg = PROCESS_COMPLETED | title %}\r\n{{ completion_msg }}\n\n### Blended Template:\n{% set completion_msg = title(PROCESS_COMPLETED)  %}\r\n{{ completion_msg }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to 15.99 and store in variable \"rounded_price\", then print it\n\n### Jinja Template:\n{% set rounded_price = 15.99 | floor %} {{rounded_price}}\n\n### Blended Template:\n{% set rounded_price = floor(15.99) %} {% print rounded_price %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named title with content Home Page\n\n### Jinja Template:\n{% block title %}Home Page{% endblock %}\n\n### Blended Template:\n{% block title %}{{ \"Home Page\" }}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through numbers 1 to 3 and print Step + number + complete\n\n### Jinja Template:\n{% for i in range(1,4) %}Step {{ i }} complete{% endfor %}\n\n### Blended Template:\n{% for i in range(1,4) %}{% print \"Step \" ~  i|string ~ \" complete\" %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nPrint list [1,2,3]\n\n### Jinja Template:\n{{ [1, 2, 3] }}\n\n### Blended Template:\n{% set temp = [1, 2, 3] %} {% print temp | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\njoin variable \"first_name\" and \"last_name\" with a space and renderit\n\n### Jinja Template:\n{{ first_name ~ \" \" ~ last_name }}\n\n### Blended Template:\n{{ first_name ~ \" \" ~ last_name }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named email_link that takes email parameter and creates mailto link\n\n### Jinja Template:\n{% macro email_link(email) %}<a href=mailto:{{ email }}>{{ email }}</a>{% endmacro %}\n\n### Blended Template:\n{% macro email_link(email) %}<a href=mailto:{{ email }}>{{ email }}</a>{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named greet that takes name parameter and prints Hello + name\n\n### Jinja Template:\n{% macro greet(name) %}Hello {{ name }}{% endmacro %}\n\n### Blended Template:\n{% macro greet(name) %}{% print \"Hello \" ~ name %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"SYSTEM\" to lowercase and print it\n\n### Jinja Template:\n{{ \"SYSTEM\".lower() }}\r\n\n\n### Blended Template:\n{% print lower(\"SYSTEM\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable items and render each item\n\n### Jinja Template:\n{% for item in items %}{{ item }}{% endfor %}\n\n### Blended Template:\n{% for item in items %}{{ item }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate \"Session \" and variable \"session_id\", then convert to lowercase and render it\n\n### Jinja Template:\n{{ (\"Session \" ~ session_id) | lower }}\n\n### Blended Template:\n{{ lower(\"Session \" ~ session_id) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_currency that takes amount and currency parameters\n\n### Jinja Template:\n{% macro format_currency(amount currency) %}{{ amount }} {{ currency }}{% endmacro %}\n\n### Blended Template:\n{% macro format_currency(amount, currency) %}{{ amount|string ~ \" \" ~ currency }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"size\" to \"large\" if quantity > 10, else \"small\", then convert to uppercase and render it\n\n### Jinja Template:\n{% set size = 'large' if quantity > 10 else 'small' }\r\n{{ size.upper() }}\n\n### Blended Template:\n{% set size = \"\" %} {% if quantity > 10 %} {% set size = \"large\" %} {% else %} {% set size = \"small\" %} {% endif %} {{ upper(size) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"access\" to \"granted\" if role == \"admin\", else \"denied\", then render it\n\n### Jinja Template:\n{% set access = \"granted\" if role == \"admin\" else \"denied\" %}\n\n### Blended Template:\n{% set access = \"\" %} {% if role == \"admin\" %} {% set access = \"granted\" %} {% else %} {% set access = \"denied\" %} {% endif %} {{access}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"level\" to 1 and render it\n\n### Jinja Template:\n{% set level = 1 %} {{level}}\n\n### Blended Template:\n{% set level = 1 %} {{level}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to get the length of object variable config and print the result\n\n### Jinja Template:\n{{ config | length }}\n\n### Blended Template:\n{% print length(config) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to calculate the mean of array variable \"ratings\" and store in \"average_rating\", then print \"Average: \" + average_rating\n\n### Jinja Template:\n{% set average_rating = rating | mean%}\r\nAverage: {{average_rating}}\n\n### Blended Template:\n{% set average_rating= mean(rating) %}\r\n{% set temp = \"Average: \" ~ average_rating | string %}\r\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named validate_credit_card that takes card_number parameter, set is_valid to true if card_number length is 16 else false, print Card validation: + is_valid\n\n### Jinja Template:\n{% macro validate_credit_card(card_number) %}{% if card_number | length == 16 %}{% set is_valid = true %}{% else %}{% set is_valid = false %}{% endif %}Card validation: {{ is_valid }}{% endmacro %}\n\n### Blended Template:\n{% macro validate_credit_card(card_number) %}{% set is_valid = false %}{% if length(card_number)== 16 %}{% set is_valid = true %}{% else %}{% set is_valid = false %}{% endif %}Card validation: {{ is_valid|string }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate variable \"protocol\" and \"://\" and variable \"hostname\", then print \"URL: \" + result\n\n### Jinja Template:\n{{ \"URL: \" ~ protocol ~ \"://\" ~ hostname }}\n\n### Blended Template:\n{% set temp = \"URL: \" ~ protocol ~ \"://\" ~ hostname %}\r\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"message\" to \"Welcome back\" if returning_user is true, else \"Welcome\", then print result + \"!\"\n\n### Jinja Template:\n{% if returning_user %}\r\n  {{ message = \"Welcome back\" }}\r\n{% else %}\r\n  {{ message = \"Welcome\" }}\r\n{% endif %}\r\n{{ message + \"!\" }}\n\n### Blended Template:\n{% set message = \"\" %} {% if returning_user %} {% set message = \"Welcome back\" %} {% else %} {% set message = \"Welcome\" %} {% endif %} {% print message ~ \"!\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to variable \"temperature\" and print \"Temperature: \" + result\n\n### Jinja Template:\n{% set temp =  temperature | floor%}\r\nTemperature: {{temp}}\n\n### Blended Template:\n{% set temp = \"Temperature: \" ~ floor(temperature) | string %}\r\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"message\" to \"Good morning\" and print it\n\n### Jinja Template:\n{% set message = \"Good morning\" %}\r\n{{ message }}\n\n### Blended Template:\n{% set message = \"Good morning\" %}\r\n{% print message %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to get the length of object variable \"user_data\" and render it\n\n### Jinja Template:\n{{ user_data | length }}\n\n### Blended Template:\n{{ length(user_data)  }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through array variable scores and print each score truncated\n\n### Jinja Template:\n{% for score in scores %}{{ score | truncate }}{% endfor %}\n\n### Blended Template:\n{% for score in scores %}{% print truncate(score, 0) %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate variable \"first_name\" and \"last_name\" with space, then convert to title case and render it\n\n### Jinja Template:\n{{ first_name|title }} {{ last_name|title }}\n\n### Blended Template:\n{{ title(first_name ~ \" \" ~ last_name) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable users and print \"User: \" + each user\n\n### Jinja Template:\n{% for user in users %}User: {{ user }}{% endfor %}\n\n### Blended Template:\n{% for user in users %}{% print (\"User: \" ~ user) %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to create a range from 2 to 12 and assign it to variable 'a'.\n\n### Jinja Template:\n{% set a = range(2, 13) %}\n\n### Blended Template:\n{% set a = range(2, 13) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through tasks and set priority_level to urgent if task.deadline < 7 else normal, set new_status to high_priority if priority_level is urgent else keep original status, print task.name + : + new_status\n\n### Jinja Template:\n{% for task in tasks %}{% set priority_level = \"urgent\" if task.deadline < 7 else \"normal\" %}{% set new_status = \"high_priority\" if priority_level == \"urgent\" else task.status %}{{ task.name }}: {{ new_status }}{% endfor %}\n\n### Blended Template:\n{% for task in tasks %}{% set priority_level = \"\" %}{% if task.deadline < 7 %}{% set priority_level = \"urgent\" %}{% else %}{% set priority_level = \"normal\" %}{% endif %}{% if priority_level == \"urgent\" %}{% set new_status = \"high_priority\" %}{% else %}{% set new_status = task.status %}{% endif %}{% print task.name ~ \": \" ~ new_status %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to the number 8.9 and print the result\n\n### Jinja Template:\n{{ 8.9 | floor }}\n\n### Blended Template:\n{% print floor(8.9) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"error_type\" to uppercase, then set \"error_label\" to \"ERROR: \" + result, then print it\n\n### Jinja Template:\n{% set error_label = \"ERROR: \" + error_type | upper %}\r\n{{ error_label }}\n\n### Blended Template:\n{% set error_label = \"ERROR: \" ~ upper(error_type) %} {% print error_label %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to create a range from 5 to 20 and store in variable \"range_values\", then print \"Range: \" + length of range_values\n\n### Jinja Template:\n{% set range_values = range(5, 21) %}\r\nRange: {{ range_values | length }}\n\n### Blended Template:\n{% set range_values =  range(5, 21) %}\r\n{% set temp =  \"Range: \" ~ length(range_values)| string %}\r\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to calculate the mean of variable \"test_scores\" and print \"Mean score: \" + result\n\n### Jinja Template:\n{% set temp =  test_scores| mean%}\r\nMean score: {{temp}}\n\n### Blended Template:\n{% set temp =  \"Mean score: \" ~ mean(test_scores) | string%}\r\n{{temp}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named modal and render variable modal_content\n\n### Jinja Template:\n{% block modal %}{{ modal_content }}{% endblock %}\n\n### Blended Template:\n{% block modal %}{{ modal_content }}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert the string \"HELLO\" to lowercase and print it\n\n### Jinja Template:\n{{ \"HELLO\".lower() }}\n\n### Blended Template:\n{% print lower(\"HELLO\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable categories and render each category in title case\n\n### Jinja Template:\n{% for category in categories %}{{ category | title }}{% endfor %}\n\n### Blended Template:\n{% for category in categories %}{{ title(category)  }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to calculate the mean of variable ratings and store in mean_rating then print it\n\n### Jinja Template:\n{% set mean_rating = ratings | mean %}{{ mean_rating }}\n\n### Blended Template:\n{% set mean_rating = mean(ratings) %}{% print mean_rating %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named user_card that takes username and email parameters and displays user info\n\n### Jinja Template:\n{% macro user_card(username, email) %}{{ username }} ({{ email }}){% endmacro %}\n\n### Blended Template:\n{% macro user_card(username, email) %}{{ username ~ \" (\" ~ email ~ \")\" }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named menu and print variable menu_items joined with |\n\n### Jinja Template:\n{% block menu %}{{ menu_items + \"|\" }}{% endblock %}\n\n### Blended Template:\n{% block menu %}{% print menu_items ~ \"|\" %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to get the length of array variable products and print the result\n\n### Jinja Template:\n{{ products | length }}\n\n### Blended Template:\n{% print length(products) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to calculate the mean of variable \"temperatures\" and render it\n\n### Jinja Template:\n{{ temperature | mean }}\n\n### Blended Template:\n{{ mean(temperature)}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to 12.75 and store in variable rounded_height then print it\n\n### Jinja Template:\n{% set rounded_height = 12.75 | floor %}{{ rounded_height }}\n\n### Blended Template:\n{% set rounded_height = floor (12.75)%}{% print rounded_height %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"compression\" to \"enabled\" if file_size > 1000, else \"disabled\", then render \"Compression: \" + compression\n\n### Jinja Template:\n{% set compression = \"enabled\" if file_size > 1000 else \"disabled\" %}\r\nCompression: {{ compression }}\n\n### Blended Template:\n{% set compression = \"\" %} {% if file_size > 1000 %} {% set compression = \"enabled\" %} {% else %} {% set compression = \"disabled\" %} {% endif %} {{ \"Compression: \" ~ compression }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"CUSTOMER SUPPORT\" to title case, then set variable \"department\" to obtained result, then render with \" Team\"\n\n### Jinja Template:\n{% set department = \"CUSTOMER SUPPORT\" | title %}\r\n{{ department ~ \" Team\" }}\n\n### Blended Template:\n{% set department = title(\"CUSTOMER SUPPORT\") %} {{ department ~ \" Team\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to get the length of array variable \"items\" and print the result\n\n### Jinja Template:\n{{ items | length }}\n\n### Blended Template:\n{% set temp = length(items) %}\r\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nprint the string \"Success!\"\n\n### Jinja Template:\n{{ \"Success!\" }}\n\n### Blended Template:\n{% print  \"Success!\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named user_status that takes user parameter and prints Active if user.status is true else Inactive\n\n### Jinja Template:\n{% macro user_status(user) %}{% if user.status %}Active{% else %}Inactive{% endif %}{% endmacro %}\n\n### Blended Template:\n{% macro user_status(user) %}{% set status = \"\" %}{% if user.status %}{% set status = \"Active\" %}{% else %}{% set status = \"Inactive\" %}{% endif %}{{ status }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through campaigns and set status to active if campaign.budget > 0 and campaign.end_date > today else inactive, print campaign.name + : + status\n\n### Jinja Template:\n{% for campaign in campaigns %}{% set status = \"active\" if campaign.budget > 0 and campaign.end_date > today else \"inactive\" %}{{ campaign.name }}: {{ status }}{% endfor %}\n\n### Blended Template:\n{% for campaign in campaigns %}{% set status = \"\" %}{% if campaign.budget > 0 and campaign.end_date > today %}{% set status = \"active\" %}{% else %}{% set status = \"inactive\" %}{% endif %}{% print campaign.name ~ \": \" ~ status %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"home page\" to title case and render it\n\n### Jinja Template:\n{{ \"home page\" | title }}\n\n### Blended Template:\n{{ title(\"home page\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate variable \"user_type\" and \"_user\", then convert to uppercase and render \"Type: \" + result\n\n### Jinja Template:\n{{ \"Type: \" ~ (user_type ~ \"_user\") | upper }}\n\n### Blended Template:\n{% set temp =  \"Type: \" ~ upper(user_type ~ \"_user\") %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable tasks and print TODO: + each task\n\n### Jinja Template:\n{% for task in tasks %}TODO: {{ task }}{% endfor %}\n\n### Blended Template:\n{% for task in tasks %}{% print \"TODO: \" ~ task %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to the number 3.7 and print the result\n\n### Jinja Template:\n{{ 3.7 | floor }}\n\n### Blended Template:\n{% print floor(3.7) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named search and print <input type='search' placeholder='Search...'>\n\n### Jinja Template:\n{% block search %}<input type='search' placeholder='Search...'>{% endblock %}\n\n### Blended Template:\n{% block search %}{% print \"<input type='search' placeholder='Search...'>\" %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"title\" to lowercase, then set \"formatted_title\" to result + \" - draft\", then print it\n\n### Jinja Template:\n{% set formatted_title = title.lower() + \" - draft\" %}\r\n{{ formatted_title }}\n\n### Blended Template:\nError : Title is a reserved keyword in Blended. It cannot be used as variable name\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through bookings and set status to confirmed if booking.payment_received else pending, print Booking + booking.id + : + status\n\n### Jinja Template:\n{% for booking in bookings %}{% set status = \"confirmed\" if booking.payment_received else \"pending\" %}Booking {{ booking.id }}: {{ status }}{% endfor %}\n\n### Blended Template:\n{% for booking in bookings %}{% set status = \"\" %}{% if booking.payment_received %}{% set status = \"confirmed\" %}{% else %}{% set status = \"pending\" %}{% endif %}{% print \"Booking \" ~ booking.id|string ~ \": \" ~ status %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to calculate the mean of variable scores and store in avg_score then print Score: + avg_score\n\n### Jinja Template:\n{% set avg_score = scores | mean %}Score: {{ avg_score }}\n\n### Blended Template:\n{% set avg_score = mean(scores) %}Score: {{ avg_score }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through orders and declare processing_fee, set processing_fee to 25 if order.total > 500 else 15, set final_total to order.total + processing_fee, print Order + order.id + Final: + final_total\n\n### Jinja Template:\n{% for order in orders %}{% set processing_fee = 25 if order.total > 500 else 15 %}{% set final_total = order.total + processing_fee %}Order {{ order.id }} Final: {{ final_total }}{% endfor %}\n\n### Blended Template:\n{% for order in orders %}{% set processing_fee = 0 %}{% if order.total > 500 %}{% set processing_fee = 25 %}{% else %}{% set processing_fee = 15 %}{% endif %}{% set final_total = order.total + processing_fee %}{% print \"Order \" ~ order.id|string ~ \" Final: \" ~ final_total|string %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_user that takes user parameter and renders user.name if user exists else prints Guest\n\n### Jinja Template:\n{% macro format_user(user) %}{% if user %}{{ user.name }}{% else %}Guest{% endif %}{% endmacro %}\n\n### Blended Template:\n{% macro format_user(user) %}{% set result = \"\" %}{% if user %}{% set result = user.name %}{% else %}{% set result = \"Guest\" %}{% endif %}{% print result %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named loading and print Please wait... if variable is_loading is true\n\n### Jinja Template:\n{% block loading %}{% if is_loading %}Please wait...{% endif %}{% endblock %}\n\n### Blended Template:\n{% block loading %}{% if is_loading %}{% print \"Please wait...\" %}{% endif %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_time that takes time parameter and prints Time: + time\n\n### Jinja Template:\n{% macro format_time(time) %}Time: {{ time }}{% endmacro %}\n\n### Blended Template:\n{% macro format_time(time) %}{% print \"Time: \" ~ time %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to calculate the mean of array variable grades and print the result\n\n### Jinja Template:\n{{ grades | mean }}\n\n### Blended Template:\n{% print mean(grades) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named toolbar and print Save | Edit | Delete\n\n### Jinja Template:\n{% block toolbar %}Save | Edit | Delete{% endblock %}\n\n### Blended Template:\n{% block toolbar %}{% print \"Save | Edit | Delete\" %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_title that takes word parameter and returns word in title case\n\n### Jinja Template:\n{% macro format_title(word) %}{{ word | title }}{% endmacro %}\n\n### Blended Template:\n{% macro format_title(word) %}{{ title(word) }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_date that takes date parameter and prints Date: + date\n\n### Jinja Template:\n{% macro format_date(date) %}Date: {{ date }}{% endmacro %}\n\n### Blended Template:\n{% macro format_date(date) %}{% print \"Date: \" ~ date %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named badge that takes text and color parameters and creates colored badge\n\n### Jinja Template:\n{% macro badge(text ,color) %}<span class=badge-{{ color }}>{{ text }}</span>{% endmacro %}\n\n### Blended Template:\n{% macro badge(text ,color) %}<span class=badge-{{ color }}>{{ text }}</span>{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named alerts and print variable alert_message if it exists\n\n### Jinja Template:\n{% block alerts %}{% if alert_message %}{{ alert_message }}{% endif %}{% endblock %}\n\n### Blended Template:\n{% block alerts %}{% if alert_message %}{{ alert_message }}{% endif %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate \"Report \" and variable \"report_id\" and \" - \" and variable \"report_date\", then render the result\n\n### Jinja Template:\n{{ \"Report \" + report_id + \" - \" + report_date }}\n\n### Blended Template:\n{{ \"Report \" ~ report_id ~ \" - \" ~ report_date }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named create_link that takes url and text parameters and creates HTML link\n\n### Jinja Template:\n{% macro create_link(url, text) %}<a href={{ url }}>{{ text }}</a>{% endmacro %}\n\n### Blended Template:\n{% macro create_link(url, text) %}<a href={{ url }}>{{ text }}</a>{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"encryption\" to \"on\" if secure_mode is true, else \"off\", then print \"Encryption: \" + encryption\n\n### Jinja Template:\n{% set encryption = \"on\" if secure_mode else \"off\" %}\r\nEncryption: {{ encryption }}\n\n### Blended Template:\n{% set encryption = \"\" %} {% if secure_mode %} {% set encryption = \"on\" %} {% else %} {% set encryption = \"off\" %} {% endif %} (% set temp = \"Encryption: \" ~ encryption %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"environment\" to lowercase, then set variable \"env_name\" to result + \"_env\", then print it\n\n### Jinja Template:\n{% set env_name = environment | lower ~ \"_env\" %}\r\n{{ env_name }}\n\n### Blended Template:\n{% set env_name = lower(environment) ~ \"_env\" %} {% print env_name %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert the string \"world\" to uppercase and print it\n\n### Jinja Template:\n{{ \"world\".upper() }}\n\n### Blended Template:\n{% print upper(\"world\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nprint the string \"Error: Not found\"\n\n### Jinja Template:\n{{ \"Error: Not found\" }}\n\n### Blended Template:\n{% print \"Error: Not found\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nStore the number 1000 in a variable \"num\", then render it after joining it with 12\n\n### Jinja Template:\n{% set num = 1000 %}\r\n{{ num | string + \"12\" }}\n\n### Blended Template:\n{% set num = 1000 %}\r\n{{ num | string ~ \"12\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate \"Hello \" and variable \"name\", then convert the result to title case and render it\n\n### Jinja Template:\n{{ (\"Hello \" + name) | title }}\n\n### Blended Template:\n{{ title(\"Hello \" ~ name)  }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to 7.8 and render it\n\n### Jinja Template:\n{{ 7.8 | floor }}\n\n### Blended Template:\n{{ floor(7.8)}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named calculate_age that takes birth_year parameter, set current_year to 2024, return current_year minus birth_year\n\n### Jinja Template:\n{% macro calculate_age(birth_year) %}{% set current_year = 2024 %}{{ current_year - birth_year }}{% endmacro %}\n\n### Blended Template:\n{% macro calculate_age(birth_year) %}{% set current_year = 2024 %}{{ current_year - birth_year }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to get the length of array variable categories and store in cat_count then render it\n\n### Jinja Template:\n{% set cat_count = categories | length %}{{ cat_count }}\n\n### Blended Template:\n{% set cat_count = length(categories)%}{{ cat_count }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"status\" to \"active\" and print it\n\n### Jinja Template:\n{% set status = \"active\" %}\r\n{{ status }}\n\n### Blended Template:\n{% set status = \"active\" %}\r\n{% print status %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable words and print each word in title case with index\n\n### Jinja Template:\n{% for word in words %}{{ loop.index }}. {{ word | title }}{% endfor %}\n\n### Blended Template:\n{% for word in words %}{% print loop.index|string ~ \". \"  ~ title(word) %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through surveys and set completion_status to complete if survey.questions_answered equals survey.total_questions else incomplete, render survey.id + : + completion_status\n\n### Jinja Template:\n{% for survey in surveys %}{% if survey.questions_answered == survey.total_questions %}{% set completion_status = \"complete\" %}{% else %}{% set completion_status = \"incomplete\" %}{% endif %}{{ survey.id }}: {{ completion_status }}{% endfor %}\n\n### Blended Template:\n{% for survey in surveys %}{% set completion_status = \"\" %}{% if survey.questions_answered == survey.total_questions %}{% set completion_status = \"complete\" %}{% else %}{% set completion_status = \"incomplete\" %}{% endif %}{{ survey.id }}: {{ completion_status }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"network connection\" to title case, then concatenate with \" Status\" and render the result\n\n### Jinja Template:\n{{ \"network connection\".title() + \" Status\" }}\n\n### Blended Template:\n{{ title(\"network connection\") ~ \" Status\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named summary and initialize message as empty, if total_sales > 1000 set message to Excellent else Good, print Sales Summary: + message\n\n### Jinja Template:\n{% block summary %}{% set message = \"Excellent\" if total_sales > 1000 else \"Good\" %}Sales Summary: {{ message }}{% endblock %}\n\n### Blended Template:\n{% block summary %}{% set message = \"\" %}{% if total_sales > 1000 %}{% set message = \"Excellent\" %}{% else %}{% set message = \"Good\" %}{% endif %}{% print \"Sales Summary: \" ~ message %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to create a range from variable \"start\" to variable \"end\" and store in \"sequence\", then print \"Range created\"\n\n### Jinja Template:\n{% set sequence = range(start, end) %}\r\nRange created\n\n### Blended Template:\n{% set sequence = range(start, end) %}\r\n{% print \"Range created\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named table_header and print Name | Email | Status\n\n### Jinja Template:\n{% block table_header %}Name | Email | Status{% endblock %}\n\n### Blended Template:\n{% block table_header %}{% print \"Name | Email | Status\" %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable colors and render each color with index\n\n### Jinja Template:\n{% for color in colors %}{{ loop.index }} {{ color }}{% endfor %}\n\n### Blended Template:\n{% for color in colors %} {{ loop.index }} {{ color }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through array variable temperatures and render each with \u00b0C\n\n### Jinja Template:\n{% for temp in temperatures %}{{ temp }}\u00b0C{% endfor %}\n\n### Blended Template:\n{% for temp in temperatures %}{{ temp ~ \"\u00b0C\" }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"module_name\" to uppercase, then set variable \"module_label\" to \"MODULE: \" + result, then print it\n\n### Jinja Template:\n{% set module_label = \"MODULE: \" ~ module_name | upper %}\r\n{{ module_label }}\n\n### Blended Template:\n{% set module_label = \"MODULE: \" ~ upper(module_name) %} {% print module_label %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable values and print each value if it's greater than 10\n\n### Jinja Template:\n{% for value in values %}{% if value > 10 %}{{ value }}{% endif %}{% endfor %}\n\n### Blended Template:\n{% for value in values %}{% if value > 10 %}{% print value %}{% endif %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to get the length of variable menu_items and render Total items: + result\n\n### Jinja Template:\n{% set temp = menu_items | length %}Total items: {{ temp }}\n\n### Blended Template:\n{% set temp = length(menu_items)  %}Total items: {{ temp }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named display_count that takes count parameter and shows Count: + count\n\n### Jinja Template:\n{% macro display_count(count) %}Count: {{ count }}{% endmacro %}\n\n### Blended Template:\n{% macro display_count(count) %}{% print \"Count: \" ~ count|string %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_price that takes amount parameter and returns amount with $\n\n### Jinja Template:\n{% macro format_price(amount) %}${{ amount }}{% endmacro %}\n\n### Blended Template:\n{% macro format_price(amount) %}{% print \"$\" ~ amount|string %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named shipping_cost that takes weight and distance parameters, set base_cost to 10, modify base_cost by adding 5 if weight > 10, modify base_cost by adding distance * 0.5, return base_cost\n\n### Jinja Template:\n{% macro shipping_cost(weight, distance) %}{% set base_cost = 10 %}{% if weight > 10 %}{% set base_cost = base_cost + 5 %}{% endif %}{% set base_cost = base_cost + (distance * 0.5) %}{{ base_cost }}{% endmacro %}\n\n### Blended Template:\n{% macro shipping_cost(weight, distance) %}{% set base_cost = 10 %}{% if weight > 10 %}{% set base_cost = base_cost + 5 %}{% endif %}{% set base_cost = base_cost + (distance * 0.5) %}{{ base_cost }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named filters and render variable filter_options\n\n### Jinja Template:\n{% block filters %}{{ filter_options }}{% endblock %}\n\n### Blended Template:\n{% block filters %}{{ filter_options }}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"format\" to \"json\" if api_version > 1, else \"xml\", then print \"Format: \" + format\n\n### Jinja Template:\n{% set format = \"json\" if api_version > 1 else \"xml\" %}\r\nFormat: {{ format }}\n\n### Blended Template:\n{% set format = \"\" %} {% if api_version > 1 %} {% set format = \"json\" %} {% else %} {% set format = \"xml\" %} {% endif %} {% set temp = \"Format: \" ~ format %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to create a range from 1 to 10 and store in variable \"numbers\", then print the length of numbers\n\n### Jinja Template:\n{% set numbers = range(1, 11) %}\r\n{{ numbers | length }}\n\n### Blended Template:\n{% set numbers = range(1, 11) %}\r\n{% print length(numbers) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to create a range from variable min to variable max and store in numbers then print Range created\n\n### Jinja Template:\n{% set numbers = range(min, max) %}Range created\n\n### Blended Template:\n{% set numbers = range(min, max) %}Range created\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nrender the number 3.14\n\n### Jinja Template:\n{{ 3.14 }}\n\n### Blended Template:\n{{ 3.14 }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named meta and print variable meta_tags\n\n### Jinja Template:\n{% block meta %}{{ meta_tags }}{% endblock %}\n\n### Blended Template:\n{% block meta %}{% print meta_tags %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"connection\" to \"secure\" if ssl is true, else \"insecure\", then render \"Connection: \" + connection\n\n### Jinja Template:\n{% set connection = \"secure\" if ssl else \"insecure\" %}\r\nConnection: {{ connection }}\n\n### Blended Template:\n{% set connection = \"\" %} {% if ssl %} {% set connection = \"secure\" %} {% else %} {% set connection = \"insecure\" %} {% endif %} {{ \"Connection: \" ~ connection }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named header and print Welcome to our site\n\n### Jinja Template:\n{% block header %}Welcome to our site{% endblock %}\n\n### Blended Template:\n{% block header %}{% print \"Welcome to our site\" %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ntruncate the number 3.14159 and render it\n\n### Jinja Template:\n{{ 3.14159 | truncate }}\n\n### Blended Template:\n{{ truncate(3.14159, 2) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"system administrator\" to title case, then set \"role_name\" to result, then render it\n\n### Jinja Template:\n{% set role_name = \"system administrator\" | title %}\r\n{{ role_name }}\n\n### Blended Template:\n{% set role_name = title(\"system administrator\") %} {{ role_name }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"country\" to upper case, join with variable \"city\", and print it.\n\n### Jinja Template:\n{{ city + country | upper }}\n\n### Blended Template:\n{% set temp = upper(country) ~ city %} {% print  temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"monitoring\" to \"active\" if health_check is true, else \"inactive\", then render \"Monitoring: \" + monitoring\n\n### Jinja Template:\n{% set monitoring = \"active\" if health_check else \"inactive\" %}\r\nMonitoring: {{ monitoring }}\n\n### Blended Template:\n{% set monitoring = \"\" %} {% if health_check %} {% set monitoring = \"active\" %} {% else %} {% set monitoring = \"inactive\" %} {% endif %} {% set temp = \"Monitoring: \" ~ monitoring %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named capitalize_name that takes name parameter and returns name in title case\n\n### Jinja Template:\n{% macro capitalize_name(name) %}{{ name | title }}{% endmacro %}\n\n### Blended Template:\n{% macro capitalize_name(name) %}{{ title(name) }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named summary and render variable summary_text in title case\n\n### Jinja Template:\n{% block summary %}{{ summary_text | title }}{% endblock %}\n\n### Blended Template:\n{% block summary %}{{ title(summary_text) }}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"Customer Service\" to lowercase and print it\n\n### Jinja Template:\n{{ \"Customer Service\" | lower }}\n\n### Blended Template:\n{% print lower(\"Customer Service\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate \"Order #\" and variable \"order_id\", then set \"order_label\" to result, then print it\n\n### Jinja Template:\n{% set order_label = \"Order #\" + order_id %}\r\n{{ order_label }}\n\n### Blended Template:\n{% set order_label = \"Order #\" ~ order_id %} {% print order_label %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named form and render variable form_fields\n\n### Jinja Template:\n{% block form %}{{ form_fields }}{% endblock %}\n\n### Blended Template:\n{% block form %}{{ form_fields }}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named calculate_shipping that takes weight and zone parameters, set base_rate to 5, add extra charges based on weight and zone, return total shipping cost\n\n### Jinja Template:\n{% macro calculate_shipping(weight, zone) %}{% set base_rate = 5 %}{% if weight > 5 %}{% set base_rate = base_rate + 3 %}{% endif %}{% if zone == \"international\" %}{% set base_rate = base_rate + 10 %}{% endif %}{{ base_rate }}{% endmacro %}\n\n### Blended Template:\n{% macro calculate_shipping(weight, zone) %}{% set base_rate = 5 %}{% if weight > 5 %}{% set base_rate = base_rate + 3 %}{% endif %}{% if zone == \"international\" %}{% set base_rate = base_rate + 10 %}{% endif %}{{ base_rate }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"user profile settings\" to title case, then set \"page_title\" to result, then print it\n\n### Jinja Template:\n{% set page_title = \"user profile settings\" | title %}\r\n{{ page_title }}\n\n### Blended Template:\n{% set page_title = title(\"user profile settings\") %} {% print page_title %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named calculate_discount that takes original_price and percentage parameters, set discount_amount to original_price * percentage / 100, return original_price - discount_amount\n\n### Jinja Template:\n{% macro calculate_discount(original_price, percentage) %}{% set discount_amount = original_price * percentage / 100 %}{{ original_price - discount_amount }}{% endmacro %}\n\n### Blended Template:\n{% macro calculate_discount(original_price, percentage) %}{% set discount_amount = original_price * percentage / 100 %}{{ original_price - discount_amount }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_currency that takes amount and currency parameters, set symbol to $ if currency is USD else \u20ac, return symbol + amount\n\n### Jinja Template:\n{% macro format_currency(amount, currency) %}{% set symbol = \"$\" if currency == \"USD\" else \"\u20ac\" %}{{ symbol }}{{ amount }}{% endmacro %}\n\n### Blended Template:\n{% macro format_currency(amount, currency) %}{% set symbol = \"\" %}{% if currency == \"USD\" %}{% set symbol = \"$\" %}{% else %}{% set symbol = \"\u20ac\" %}{% endif %}{{ symbol }}{{ amount }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ntruncate the number 3.14159 and print it\n\n### Jinja Template:\n{{ 3.14159 | truncate }}\n\n### Blended Template:\n{% print truncate(3.14159, 2) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named error and render variable error_message in uppercase\n\n### Jinja Template:\n{% block error %}{{ error_message | upper }}{% endblock %}\n\n### Blended Template:\n{% block error %}{{ upper(error_message) }}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable orders and render \"Order\" + order + \"processed\"\n\n### Jinja Template:\n{% for order in orders %}Order {{ order }} processed{% endfor %}\n\n### Blended Template:\n{% for order in orders %}{{ \"Order \" ~  order  ~ \" processed\" }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nrender the number 0\n\n### Jinja Template:\n{{ 0 }}\n\n### Blended Template:\n{{ 0 }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"user profile\" to title case and print it\n\n### Jinja Template:\n{{ \"user profile\".title() }}\n\n### Blended Template:\n{% print title(\"user profile\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_address that takes address parameter, set formatted to address with proper capitalization, return formatted address\n\n### Jinja Template:\n{% macro format_address(address) %}{{ address|title }}{% endmacro %}\n\n### Blended Template:\n{% macro format_address(address) %}{{ title(address) }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named navigation with links Home | About | Contact\n\n### Jinja Template:\n{% block navigation %}Home | About | Contact{% endblock %}\n\n### Blended Template:\n{% block navigation %}Home | About | Contact{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nrender a variable named \"price\"\n\n### Jinja Template:\n{{ price }}\n\n### Blended Template:\n{{price}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\njoin variable \"city\" and \"country\", convert it to upper case and print it\n\n### Jinja Template:\n{{ (city + country) | upper }}\n\n### Blended Template:\n{% print  upper(city ~ country) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named progress_bar that takes percentage parameter and shows progress\n\n### Jinja Template:\n{% macro progress_bar(percentage) %}Progress: {{ percentage }}%{% endmacro %}\n\n### Blended Template:\n{% macro progress_bar(percentage) %}{% print \"Progress: \" ~ percentage|string ~ \"%\" %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"authentication\" to \"required\" if security_level > 2, else \"optional\", then print \"Auth: \" + authentication\n\n### Jinja Template:\n{% set authentication = \"required\" if security_level > 2 else \"optional\" %}\r\nAuth: {{ authentication }}\n\n### Blended Template:\n{% set authentication = \"\" %} {% if security_level > 2 %} {% set authentication = \"required\" %} {% else %} {% set authentication = \"optional\" %} {% endif %} {% set temp = \"Auth: \" ~ authentication %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named process_order that takes order parameter, set status to Shipped if order.paid else Pending, render Order + order.id + : + status\n\n### Jinja Template:\n{% macro process_order(order) %}{% set status = \"Shipped\" if order.paid else \"Pending\" %}Order {{ order.id }}: {{ status }}{% endmacro %}\n\n### Blended Template:\n{% macro process_order(order) %}{% set status = \"\" %}{% if order.paid %}{% set status = \"Shipped\" %}{% else %}{% set status = \"Pending\" %}{% endif %}Order {{ order.id }}: {{ status }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate \"Build \" and variable \"build_number\", then convert to uppercase and render it\n\n### Jinja Template:\n{{ ('Build ' + build_number) | upper }}\n\n### Blended Template:\n{{ upper('Build ' ~ build_number) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_address that takes street city parameters and formats address\n\n### Jinja Template:\n{% macro format_address(street, city) %}{{ street }} {{ city }}{% endmacro %}\n\n### Blended Template:\n{% macro format_address(street, city) %}{{ street ~ \", \" ~ city }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named breadcrumb and render variable breadcrumb_path\n\n### Jinja Template:\n{% block breadcrumb %}{{ breadcrumb_path }}{% endblock %}\n\n### Blended Template:\n{% block breadcrumb %}{{ breadcrumb_path }}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"server_name\" to lowercase, then concatenate with \".local\" and print \"Server: \" + result\n\n### Jinja Template:\n{{ 'Server: ' + server_name.lower() + '.local' }}\n\n### Blended Template:\n{% set temp = \"Server: \" ~ lower(server_name) ~ \".local\" %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named success and print Operation completed successfully\n\n### Jinja Template:\n{% block success %}Operation completed successfully{% endblock %}\n\n### Blended Template:\n{% block success %}{% print \"Operation completed successfully\" %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named validate_age that takes age parameter, set is_adult to true if age >= 18 else false, print Age verification: + is_adult\n\n### Jinja Template:\n{% macro validate_age(age) %}{% set is_adult = age >= 18 %}Age verification: {{ is_adult }}{% endmacro %}\n\n### Blended Template:\n{% macro validate_age(age) %}{% set is_adult = false %}{% if age >= 18 %}{% set is_adult = true %}{% else %}{% set is_adult = false %}{% endif %}{% print \"Age verification: \" ~ is_adult|string %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named check_password that takes password parameter, set strength to strong if length > 8 else weak, print Password is + strength\n\n### Jinja Template:\n{% macro check_password(password) %}{% set strength = \"strong\" if password|length > 8 else \"weak\" %}Password is {{ strength }}{% endmacro %}\n\n### Blended Template:\n{% macro check_password(password) %}{% set strength = \"\" %}{% if length(password)> 8 %}{% set strength = \"strong\" %}{% else %}{% set strength = \"weak\" %}{% endif %}{% print \"Password is \" ~ strength %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nRender a boolean value \"true\"\n\n### Jinja Template:\n{{ true }}\n\n### Blended Template:\n{% set temp = true %} {% print temp | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named status_icon that takes status parameter and shows appropriate icon\n\n### Jinja Template:\n{% macro status_icon(status) %}{% if status == active %}\u2713{% else %}\u2717{% endif %}{% endmacro %}\n\n### Blended Template:\n{% macro status_icon(status) %}{% if status == 'active' %}{% print \"\u2713\" %}{% else %}{% print \"\u2717\" %}{% endif %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"task_name\" to title case, then set \"task_label\" to result + \" Task\", then print it\n\n### Jinja Template:\n{{ task_name|title }} Task\n\n### Blended Template:\n{% set task_label= title(task_name) ~ \" Task\"%}\r\n{% print task_label %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable messages and print each message in lowercase\n\n### Jinja Template:\n{% for message in messages %}{{ message | lower }}{% endfor %}\n\n### Blended Template:\n{% for message in messages %}{% print lower(message) %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"logging\" to \"verbose\" if debug_mode is true, else \"minimal\", then print \"Logging: \" + logging\n\n### Jinja Template:\n{% set logging = \"verbose\" if debug_mode else \"minimal\" %}\r\nLogging: {{ logging }}\n\n### Blended Template:\n{% set logging = \"\" %} {% if debug_mode %} {% set logging = \"verbose\" %} {% else %} {% set logging = \"minimal\" %} {% endif %} {% set temp = \"Logging: \" ~ logging %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named header_text that takes text parameter and creates h1 element\n\n### Jinja Template:\n{% macro header_text(text) %}<h1>{{ text }}</h1>{% endmacro %}\n\n### Blended Template:\n{% macro header_text(text) %}{% print \"<h1>\" ~ text ~ \"</h1>\" %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"email\" to lowercase, then concatenate with \"@domain.com\" and print it\n\n### Jinja Template:\n{{ email|lower }}@domain.com\n\n### Blended Template:\n{% set temp = lower(email) ~ \"@domain.com\" %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named user_info and render Welcome + variable username\n\n### Jinja Template:\n{% block user_info %}Welcome {{ username }}{% endblock %}\n\n### Blended Template:\n{% block user_info %}{% print \"Welcome \" ~ username %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate variable \"hostname\" and \":\" and variable \"port\", then set \"endpoint\" to result, then render it\n\n### Jinja Template:\n{% set endpoint = hostname + \":\" + port %}\r\n{{endpoint}}\n\n### Blended Template:\n{% set endpoint = hostname ~ \":\" ~ port %}\r\n{{endpoint}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through numbers 10 to 15 and render \"Number\" + each number\n\n### Jinja Template:\n{% for i in range(10 , 16) %}Number {{ i }}{% endfor %}\n\n### Blended Template:\n{% for i in range(10 , 16) %}{{\"Number \" ~ i |string }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named show_percentage that takes value parameter and displays with % sign\n\n### Jinja Template:\n{% macro show_percentage(value) %}{{ value }}%{% endmacro %}\n\n### Blended Template:\n{% macro show_percentage(value) %}{{ value|string ~ \"%\" }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"service_name\" to title case, then set \"display_name\" to result + \" Service\", then print it\n\n### Jinja Template:\n{{ service_name|title }} Service\n\n### Blended Template:\n{% set display_name = title(service_name) ~ \" Service\" %} {% print display_name %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable products and print each product in uppercase\n\n### Jinja Template:\n{% for product in products %}{{ product | upper }}{% endfor %}\n\n### Blended Template:\n{% for prod in products %}{% print upper(prod) %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"theme\" to \"dark\" if preference == \"night\", else \"light\", then render \"Theme: \" + theme\n\n### Jinja Template:\n{% set theme = \"dark\" if preference == \"night\" else \"light\" %}\r\nTheme: {{ theme }}\n\n### Blended Template:\n{% set theme = \"\" %} {% if preference == \"night\" %} {% set theme = \"dark\" %} {% else %} {% set theme = \"light\" %} {% endif %} {{ \"Theme: \" ~ theme }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named status_bar and print Status: + variable current_status\n\n### Jinja Template:\n{% block status_bar %}Status: {{ current_status }}{% endblock %}\n\n### Blended Template:\n{% block status_bar %}{% print \"Status: \" ~ current_status %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through numbers 1 to 5 and display Count: + number for odd numbers only\n\n### Jinja Template:\n{% for i in range(1 , 6) %}{% if i % 2 == 1 %}Count: {{ i }}{% endif %}{% endfor %}\n\n### Blended Template:\n{% for i in range(1 , 6) %}{% if i % 2 == 1 %}{{\"Count: \" ~  i|string }}{% endif %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"level\" to 1 if experience < 5, else 2, then convert to string and print \"Level: \" + result\n\n### Jinja Template:\n{% set level = 1 if experience < 5 else 2 %}\r\n{{ \"Level: \" + level }}\n\n### Blended Template:\n{% set level = 0 %} {% if experience < 5 %} {% set level = 1 %} {% else %} {% set level = 2 %} {% endif %} {% print \"Level: \" ~ level | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"PRODUCT NAME\" to title case, then concatenate with \" - Available\" and render it\n\n### Jinja Template:\n{{ \"PRODUCT NAME\" | title }} - Available\n\n### Blended Template:\n{% set temp = title(\"PRODUCT NAME\")  ~ \"- Available\" %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert the number 0 to string and store in \"zero_str\"\n\n### Jinja Template:\n{% set zero_str = \"0\" %}\n\n### Blended Template:\n{% set zero_str = \"0\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through numbers 2, 4, 6 and render each number squared\n\n### Jinja Template:\n{% for i in [2, 4, 6] %}{{ i * i }}{% endfor %}\n\n### Blended Template:\n{% for i in [2, 4, 6] %}{{ i * i }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_score that takes score parameter and truncates then adds /100\n\n### Jinja Template:\n{% macro format_score(score) %}{{ score | truncate }}/100{% endmacro %}\n\n### Blended Template:\n{% macro format_score(score) %}{{ truncate(score, 2)|string ~ \"/100\" }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"service_name\" to title case, then set \"display_name\" to result + \" Service\", then print it\n\n### Jinja Template:\n{% set display_name = service_name | title ~ \" Service\" %}\r\n{{ display_name }}\n\n### Blended Template:\n{% set display_name = title(service_name) ~ \" Service\" %} {% print display_name %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through numbers 1 to 3 and render \"Item\" + number\n\n### Jinja Template:\n{% for i in range(1, 4) %}Item {{ i }}{% endfor %}\n\n### Blended Template:\n{% for i in range(1 , 4) %}Item {{ i }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"DATABASE\" to lowercase and print it\n\n### Jinja Template:\n{{ \"DATABASE\".lower() }}\n\n### Blended Template:\n{% print lower(\"DATABASE\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert the number 25 to string and store in variable \"age_str\"\n\n### Jinja Template:\n{% set age_str = 25 | string %}\n\n### Blended Template:\n{% set age_str = 25 | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to calculate the mean of variable prices and render it\n\n### Jinja Template:\n{{ prices | mean }}\n\n### Blended Template:\n{{ mean(prices) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nprint the number 42\n\n### Jinja Template:\n{{ 42 }}\n\n### Blended Template:\n{% print 42%}\n\n"}
