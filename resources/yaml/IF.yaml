"dependency":
-   "bases":
        "base": |
            <html>
            <body>
            {% block content %}<p>Parent Content</p>{% endblock %}
            </body>
            </html>
        "block_scope": |
            <!DOCTYPE html>
            <html>
                <head>
                    {% block head %}
                        <link rel="stylesheet" href="style.css" />
                        <title>{% block title %}{% endblock %} - My Webpage</title>
                    {% endblock %}
                </head>
                <body>
                    <div id="content">{% block content %}{% endblock %}</div>
                    <div id="footer">
                        {% block footer %}
                            &copy; Copyright 2011 by <a href="http://domain.invalid/">you</a>.
                        {% endblock %}
                    </div>
                </body>
            </html>
        "block_scope2": |
            {% block one %}{% endblock %}
            {% block two %}{% endblock %}
        "block_scoping2": |
            {% set value=100 %}

            {% block first %}
            --first block--
            {% set value=45 %}
            {{ value }}
            {% endblock %}

            {% block second %}
            --second block--
            {% set value=25 %}
            {{value}}
            {% endblock %}

            {% block third %}
            --third block--
            {% set value=35 %}
            {{value}}
            {% endblock %}
        "block_scoping3": |
            {% set value=100 %}

            {% block first %}
            --first block--
            {{ value }}
            {{ variable }}
            {% endblock %}

            {% block second %}
            --second block--
            {% set variable=25 %}
            {% endblock %}

            {% block third %}
            --third block--
            {% set value=35 %}
            {{value}}
            {% set variable=45%}
            {% endblock %}
        "block_scoping3_01": |
            {% set value=100 %}

            {% block first %}
            --first block--
            {{ value }}
            {{ variable }}
            {% endblock %}
        "block_scoping3_02": |
            {% set variable=25 %}
            {% block second %}
            --second block--
            {% endblock %}
        "block_scoping3_03": |
            {% set value=35 %}
            {% block third %}
            --third block--
            {{value}}
            {% endblock %}
        "block_scoping_new": |
            {% set value = "base" %}
            {% block container %}{% endblock %}
        "block_scoping_test": |
            {% set variable=100 %}

            {% block first %}
            {{ variable }}
            {% endblock %}

            {% block second %}
            {% set variable=25 %}
            {% endblock %}

            {% block third %}
            {% set variable=45%}
            {% endblock %}
        "block_scoping_test_01": |
            {% set variable=100 %}

            {% block first %}
            {{ variable }}
            {% endblock %}
        "block_scoping_test_02": |
            {% set variable=100 %}

            {% block second %}
            {% endblock %}
        "block_scoping_test_03": |
            {% set variable=100 %}

            {% block third %}
            {% endblock %}
        "check": |
            <html>
            <body>


            {% block first %}
            {% endblock %}


            </body>
            </html>
        "check_child_scope": |
            <html>
            <body>
            {% block content %}
            {% set greeting = 'Hello !' %}
            {{ greeting }} this is the parent
            {% endblock %}
            </body>
            </html>
        "extend_using_nestedBlock": |
            <html>
            <head>
            {% block content %}
            {{ "This is Root's content" }}
            {% endblock %}
            </head>
            <body>
            {% block inner %}
            {{ "This is from Root's inner" }}
            {% endblock %}
            </body>
            </html>
        "inner": |
            <html>
            {% block content %}
            <body>
            {% block inner%}{% endblock %}
            </body>
            {% endblock %}
            </html>
        "macro": |
            {% macro parent_macro() %}<p>Parent Macro</p>{% endmacro %}
            {% block content %}{% endblock %}
        "main_base": |
            {% block container %}
            base container base
            {% block outer %}
            base outer base
            {% block inner1 %}
            base inner base
            {% endblock %}
            {% endblock %}
            {% endblock %}
        "mid_base1": |
            {% extends "bases/main_base.html" %}
            {% block outer %}
            block outer mid1
            {% block inner2 %}
            block inner2 mid1
            {% parent %}
            {% endblock %}
            {% endblock %}
        "mid_base2": |
            {% extends "bases/main_base.html" %}
            {% block inner1 %}
            block inner1 mid2
            {% endblock %}
        "multiple": |
            {% extends bases.base|template %}
            {% block content %}
            <p>This is content from the template "multiple.html"</p>
            {% endblock %}
        "out": |+
            {% block first_block %}
            {% endblock %}
            {% block second_block %}
            {% set value=200 %}
            {% endblock %}
            {% block third_block %}
            {{ value}}
            {% endblock %}
            {% block variable_block %}
            Hello {{ var }}
            {% endblock %}

        "parent": |
            {% set val=45 %}
            {% block variable_block %}
            {{ val }}
            {% endblock %}
            {% block new_block %}

            this is parent block
            {% endblock %}
        "parent2": |
            {% set val=45 %}
            {% block variable_block %}
            {{ val }}
            {% endblock %}

            {% block new_block %}
            this is parent block
            {% endblock %}
        "parent3": |
            {% set val=45 %}
            {% block variable_block %}
            {% print val %}
            {% endblock %}
            {% block new_block %}

            this is parent block
            {% endblock %}
        "parent4": |
            {% set val=45 %}
            {% block variable_block %}
            {% print val %}
            {% endblock %}

            {% block new_block %}

            this is parent block
            {% endblock %}
        "parent_autoescape2": |
            {% autoescape false %}
            <html>
            {% block test %}{% set parenthtml = "<h1>Parent</h1>" %}{{ parenthtml }}{% endblock %}
            </html>
            {% endautoescape %}
        "parent_template": |
            {% block k %}
            {% set var = 'parent' %}
            {% endblock %}
        "parent_template2": |
            {% set val = 'parent' %}{% block k %}{% set val = 'inner' %}{% endblock %}{{ val }}
        "path": |-
            bases/base.html
        "path2": |
            bases/base.html
        "root": |
            {% set value=15 %}
            {% block new_block %}
            {{ var }}
            {% endblock %}
        "super": |
            {% block variable_block %}
            {{ var }}
            parent block
            {% endblock %}
        "test_bases_eof": "{% block content %}{% endblock %}\r\n"
        "value_set": |
            {% set value = 20 %}
            {% block test %}
            {{ value }}
            {% endblock %}
    "includes":
        "chain": |
            {% include includes.with|template with { "argument" : argument, "value" : 42 } only %}
        "child": |
            {{ upper('string was in lower') }}
        "child2": |
            {% set value = 25 %}
            Included Template
        "colormacro": |4

            {% macro avgcolor(color1, color2) -%}
                {%- set color1 = rgbcolor(color1) -%}
                {%- set color2 = rgbcolor(color2) -%}
                {%- set coloravg = [
                    mean([color1[0], color2[0]]),
                    mean([color1[1], color2[1]]),
                    mean([color1[2], color2[2]])
                ] -%}
                {{ hexcolor(coloravg) }}
            {%- endmacro %}

            {% macro lighten(color, fraction) -%}
                {%- set color = rgbcolor(color) -%}
                {%- set add_white = 255 * fraction -%}
                {%- set new_r = color[0] + add_white -%}
                {%- set new_g = color[1] + add_white -%}
                {%- set new_b = color[2] + add_white -%}
                {%- if new_r > 255 %}{% set new_r = 255 %}{% endif -%}
                {%- if new_g > 255 %}{% set new_g = 255 %}{% endif -%}
                {%- if new_b > 255 %}{% set new_b = 255 %}{% endif -%}
                {{ hexcolor([new_r, new_g, new_b]) }}
            {%- endmacro %}

            {% macro darken(color, fraction) -%}
                {%- set color = rgbcolor(color) -%}
                {%- set darkcolor = [
                    color[0] - (color[0] * fraction),
                    color[1] - (color[1] * fraction),
                    color[2] - (color[2] * fraction),
                ] -%}
                {{ hexcolor(darkcolor) }}
            {%- endmacro %}
        "eof_test": |+
            This included file contains a extra new line at the EOF given by user apart from hidden newline character.

        "eof_test10": |
            this is a new file
            this is a new file
        "eof_test11": |-
            this is a new file
        "eof_test2": |
            This included file contains hidden newline character only at the EOF.
        "eof_test3": "This included file contains a tab given by user apart from a\
            \ hidden newline character at the EOF.\t\n"
        "eof_test4": "This included file contains a Carriage return and newline as\
            \ used in windows os ('\\r\\n') at the EOF.\r\n"
        "eof_test5": "This included file contains a Carriage return as used in Mac\
            \ os ('\\r') at the EOF.\r"
        "eof_test6": "This included file contains multiple Carriage return as used\
            \ in Mac os ('\\r\\r') at the EOF.\r\r"
        "eof_test7": |-
            this included file is created by echo command of linux.
        "eof_test8": |
            this included file is contains comment tags at the EOF.{# #}
        "eof_test9": |
            This included file contains newline character at the EOF.
        "example_file": |-
            path file is created by echo command of linux
        "example_file2": |
            path file is created by Text Editor tool
        "faker": |
            FAKER!
        "forautoescape": |
            <h1>autoescape</h1>
        "has_hello": |
            {% macro hello() %}
            Hello included!
            {% endmacro %}
        "has_macro": |
            {% macro from_inside(var) %}{{var}}{% endmacro %}
            {% print from_inside(42) %}
        "include_path": |-
            include/example_file.html
        "include_path2": |
            include/example_file2.html
        "macro_call": |+
            {% print hello("hello world") %}

        "macro_call2": |
            {% macro test() %}
               "hello this included file macro"
            {% endmacro %}
        "macro_within_macro": |
            {% macro test() %}
            {% print hello() %}
            "this is included macro"
            {% endmacro %}
            {% print test() %}
        "macro_within_macro2": |
            {% macro test() %}
            {% print hello() %}
            "this is included macro"
            {% endmacro %}
        "macro_within_macro3": |
            {% print hello() %}
            {% macro test() %}
            "this is included macro"
            {% endmacro %}
            {% print test() %}
        "module": "{% macro macro1() %}\r\nmacro1 imported!\r\n{% endmacro %}\r\n\
            {% macro macro2() %}\r\nmacro2 imported!\r\n{% endmacro %}\r\n"
        "name_snippet": |+
            {% set greeting = "< in-built filter e is used >" %}
            {{ greeting|e }}
            {% print round(10.6) %}

            {% macro hello() %}
            "this is user functions"
            {% endmacro %}
            {% print hello() %}

        "new_macro_call": |+
            {{ hello("hello world") }}

        "new_macro_within_macro2": |
            {% macro test() %}
            {{ hello() }}
            "this is included macro"
            {% endmacro %}
        "newline_test": |
            This is included File.
        "newline_test2": |
            This is included File.

            {% set var = "Hello World!" %}
            {% print var %} After include Tag new Line goes Here--->
        "scope": |
            {% set defined_outside = "inside" %}
            {% set defined_inside = "inside" %}
        "scope2": |
            {% set value = 24 %}
            {{ variable }}
        "scope_test": |
            These parens contain a variable from external scope: ({{ variable }})
        "string": |
            This text is loaded as a string.
        "template": |
            {% set var = 22 %}
        "value_call": |
            {{ value }}
        "variable": |
            This text is included via the context as a variable.
        "with": |
            There are two values that are added to the context: {{ argument }}, {{ value }}.
"overview": |-
    Decision making is anticipation of conditions occurring while execution of the program and specifying actions taken according to the conditions.Decision structures evaluate multiple expressions which produce TRUE or FALSE as outcome. You need to determine which action to take and which statements to execute if outcome is TRUE or FALSE otherwise.An if statement can be followed by an optional else statement, which executes when the boolean expression is FALSE.
"tests":
-   "data": |
        {
          "true_condition": true,
          "false_condition": false
        }
    "desc": |-
        Simple conditional tag, which evalutes its body if the supplied condition is true.
    "expected": |+
        True
        False

    "name": |-
        test_03_00_if_basic.test
    "template": |
        {% if true_condition %}
        True
        {% else %}
        Not True
        {% endif %}
        {% if false_condition %}
        True
        {% else %}
        False
        {% endif %}
    "testname": |-
        if
-   "data": |
        {
          "range" : [ 1 , 2 ],
          "variable" : "value"
        }
    "desc": |-
        The body of an if statement is executed if the value of the expression is True then we can change value of global variable inside body of IF statement
    "expected": |+
        3

    "name": |-
        test_03_03_if_scope.test
    "template": |
        {% set local = 1 %}
        {% if local %}
        {% set local = local + 2 %}
        {% endif %}
        {{ local }}
    "testname": |-
        if scope case1
-   "data": |
        {
        "base": "{% ifblock heading %}<h1>{% block heading %}{{ heading }}{% endblock %}</h1>{% endifblock %}",
        "heading": "Heading"
        }
    "desc": |-
        Simple conditional tag, which evalutes its body if the supplied condition is true.The if statement controls conditional branching. The body of an if statement is executed if the value of the expression is True.
    "expected": |
        <h1> Heading </h1>
    "name": |-
        test_56_00_ifblock_tag.test
    "template": |
        {% extends base|template %}
        {% block heading %} {{ heading }} {% endblock %}
    "testname": |-
        if block case1
-   "data": |
        {
        "base": "<h1>{% ifblock heading %}{% block heading %}{% endblock %}{% else %}Default Heading{% endifblock %}</h1>",
        "heading": "Heading"
        }
    "desc": |-
        Simple conditional tag, which evalutes its body if the supplied condition is true.The if statement controls conditional branching. The body of an if statement is executed if the value of the expression is True.
    "expected": |
        <h1> Heading </h1>
    "name": |-
        test_56_01_ifblock_tag.test
    "template": |
        {% extends base|template %}
        {% block heading %} {{ heading }} {% endblock %}
    "testname": |-
        if block case2
-   "data": |
        {
        "base": "{% ifblock heading %}<h1>{% block heading %}{{ heading }}{% endblock %}</h1>{% endifblock %}"
        }
    "desc": |-
        Simple conditional tag, which evalutes its body if the supplied condition is true.The if statement controls conditional branching. The body of an if statement is executed if the value of the expression is True.
    "expected": |4+

    "name": |-
        test_56_02_ifblock_tag.test
    "template": |
        {% extends base|template %}
        {% block heading %} {{ heading }} {% endblock %}
    "testname": |-
        if block case3
-   "data": |
        {
        "base": "<h1>{% ifblock heading %}{% block heading %}{% endblock %}{% else %}Default Heading{% endifblock %}</h1>"
        }
    "desc": |-
        Simple conditional tag, which evalutes its body if the supplied condition is true.The if statement controls conditional branching. The body of an if statement is executed if the value of the expression is True.
    "expected": |
        <h1>Default Heading</h1>
    "name": |-
        test_56_03_ifblock_tag.test
    "template": |
        {% extends base|template %}
        {% block heading %} {{ heading }} {% endblock %}
    "testname": |-
        if block case4
-   "data": |
        { "bool": false }
    "desc": |-
        Simple conditional tag, which evalutes its body if the supplied condition is true.The if statement controls conditional branching. The body of an if statement is executed if the value of the expression is True.
    "expected": |+
        true
        false

    "name": |-
        test_60_00_boolean_printing_test.test
    "template": |
        {{ true|string }}
        {{ bool|string }}
    "testname": |-
        if block case5
-   "data": |
        {}
    "desc": |-
        Simple conditional tag, which evalutes its body if the supplied condition is true.The if statement controls conditional branching. The body of an if statement is executed if the value of the expression is True.
    "expected": |+
        This is the inner block


        Check for multiple blocks successful

    "name": |-
        test_56_04_ifblock_tag.test
    "template": |
        {% block inner %}
        {{ "This is the inner block" }}
        {% endblock %}

        {% block outer %}
        {% endblock %}

        {% ifblock inner outer %}
        {{ "Check for multiple blocks successful" }}
        {% endifblock %}
    "testname": |-
        if block multiple args case 1
-   "data": |
        {
        "base": "{% ifblock heading outer content %}<h1>{% block heading %}{% endblock %}{% block outer %}{% endblock %}{% block content %}{% endblock %}</h1>{% endifblock %}",
        "heading": "Heading"
        }
    "desc": |-
        Simple conditional tag, which evalutes its body if the supplied condition is true.The if statement controls conditional branching. The body of an if statement is executed if the value of the expression is True.
    "expected": |
        <h1> Heading </h1>
    "name": |-
        test_56_05_ifblock_tag.test
    "template": |
        {% extends base|template %}
        {% block heading %} {{ heading }} {% endblock %}
    "testname": |-
        if block multiple args case 2
-   "data": |
        {
            "data": "Inner"
        }
    "desc": |-
        Simple conditional tag, which evalutes its body if the supplied condition is true.The if statement controls conditional branching. The body of an if statement is executed if the value of the expression is True.
    "expected": |4+



    "name": |-
        test_56_06_ifblock_tag.test
    "template": |
        {% block content %}
        {% endblock %}

        {% block outer %}
        {% endblock %}

        {% ifblock content outer %}
        {% block inner %}
        {{ data }}
        {% endblock %}
        {% endifblock %}
    "testname": |-
        if block multiple args case 3
-   "data": |
        {
            "data": "Inner"
        }
    "desc": |-
        ifblock functionalities
    "expected": |4+
        hi
        this is if condition
        
    "name": |-
        test_78_01_ifblock.test
    "template": |
        {% block content %}
        {{ "hi" }}
        {% endblock %}
        {% block outer %}
        {% endblock %}
        {% ifblock content %}
        this is if condition
        {% endifblock %}
    "testname": |-
        if block multiple args case 4
-   "data": |
        {
            "data": "Inner"
        }
    "desc": |-
        ifblock functionalities
    "expected": |4+
        hi

    "name": |-
        test_78_02_ifblock.test
    "template": |
        {% block content %}
        hi
        {% endblock %}
        {% block outer %}
        {% endblock %}
        {% ifblock outer %}
        this is if condition
        {% endifblock %}
    "testname": |-
        if block multiple args case 5
-   "data": |
        {
            "data": "Inner"
        }
    "desc": |-
        ifblock functionalities
    "expected": |4+
        this is if condition
        hi
        
    "name": |-
        test_78_03_ifblock.test
    "template": |
        {% ifblock inner %}
        this is if condition
        {% block inner %}
        hi
        {% endblock %}
        {% endifblock %}
    "testname": |-
        if block multiple args case 6
-   "data": |
        {
            "data": "Inner"
        }
    "desc": |-
        if functionalities with undefined variable
    "expected": |4+
        this is else condition

    "name": |-
        test_78_04_ifblock.test
    "template": |
        {% if name %}
        this is if condition
        {% else %}
        this is else condition
        {% endif %}
    "testname": |-
        if tag testing with undefined variable
