{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"age\" to string and set it to variable age_str.\n\n### Jinja Template:\n{% set age_str = age | string %}\n\n### Blended Template:\n{% set age_str = age | string %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print \"Hello World\" and 42.\n\n### Jinja Template:\n{{ \"Hello World\" }}  // string\n{{ 42 }}            // number\n\n### Blended Template:\n{% print \"Hello World\" %}  // string\n{% print 42 %}            // number"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable named \"name\" to upper and print it\n\n### Jinja Template:\n{{ name | upper }}\n\n### Blended Template:\n{% print upper(name) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print an object {name: \"John\"}\n\n### Jinja Template:\n{{ {name: \"John\"} }} // object is valid here\n\n### Blended Template:\n{% print {name: \"John\"} %} // gives error"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"score\" to string and set it to variable score_text.\n\n### Jinja Template:\n{% set score_text = score | string %}\n\n### Blended Template:\n{% set score_text = score | string %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print null value\n\n### Jinja Template:\n{{ null }} // null is valid here\n\n### Blended Template:\n{% print null %} // gives error"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to truncate the number \"num\" and print it\n\n### Jinja Template:\n{{ num | truncate }}\n\n### Blended Template:\n{% print truncate(num) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to set \"user profile\" as title case and print it.\n\n### Jinja Template:\n{{ \"user profile\" | title }}\n\n### Blended Template:\n{% print title(\"user profile\") %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which concatenates \"Hello\" and \"World\" and render the result\n\n### Jinja Template:\n{{ \"Hello\" + \"World\" }}\n\n### Blended Template:\n{{ \"Hello\" ~ \"World\" }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render an empty object\n\n### Jinja Template:\n{{ {} }} // object is valid here\n\n### Blended Template:\n{{ {} }} // object not valid in blended"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"email\" to lowercase and store in new_email variable\n\n### Jinja Template:\n{% set new_email = email | lower %}\n\n### Blended Template:\n{% set new_email = lower(email) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print \"Welcome\" and the number 100.\n\n### Jinja Template:\n{{ \"Welcome\" }}  // string\n{{ 100 }}       // number\n\n### Blended Template:\n{% print \"Welcome\" %}  // string\n{% print 100 %}       // number"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"city\" to uppercase and render it\n\n### Jinja Template:\n{{ city | upper }}\n\n### Blended Template:\n{{ upper(city) }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print boolean value\n\n### Jinja Template:\n{{ true }} // boolean is valid here\n\n### Blended Template:\n{% print true %} // gives error"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"title\" to lowercase and render it\n\n### Jinja Template:\n{{ title | lower }}\n\n### Blended Template:\n{{ lower(title) }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render \"Temperature\" and 36.5.\n\n### Jinja Template:\n{{ \"Temperature\" }}  // string\n{{ 36.5 }}          // number\n\n### Blended Template:\n{{ \"Temperature\" }}  // string\n{{ 36.5 }}          // number"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to set \"home page\" as title case and render it.\n\n### Jinja Template:\n{{ \"home page\" | title }}\n\n### Blended Template:\n{{ title(\"home page\") }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to set \"contact us\" as title case and render it.\n\n### Jinja Template:\n{{ \"contact us\" | title }}\n\n### Blended Template:\n{{ title(\"contact us\") }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which combines variable \"first_name\" and \"last_name\" and render the result\n\n### Jinja Template:\n{{ first_name + last_name }}\n\n### Blended Template:\n{{ first_name ~ last_name }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable named \"name\" to lower and print it\n\n### Jinja Template:\n{{ name | lower }}\n\n### Blended Template:\n{% print lower(name) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert \"USERNAME\" to lowercase and print it\n\n### Jinja Template:\n{{ \"USERNAME\" | lower }}\n\n### Blended Template:\n{% print lower(\"USERNAME\") %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which adds two strings : \"a\" and \"b\" and render the result\n\n### Jinja Template:\n{{ \"a\" + \"b\" }}\n\n### Blended Template:\n{{ \"a\" ~ \"b\" }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render boolean value\n\n### Jinja Template:\n{{ true }} // boolean is valid here\n\n### Blended Template:\n{{ true }} // boolean not valid in blended"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to set 'discount' variable to 10 if is_member is true else set 'discount' to 0. Render it after the conditional block\n\n### Jinja Template:\n{% if is_member %}\n  {% set discount = 10 %}\n{% else %}\n  {% set discount = 0 %}\n{% endif %}\n{{ discount }}\n\n### Blended Template:\n{% set discount = 0 %}\n{% if is_member %}\n  {% set discount = 10 %}\n{% else %}\n  {% set discount = 0 %}\n{% endif %}\n{{ discount }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render \"Status\" and 200.\n\n### Jinja Template:\n{{ \"Status\" }}  // string\n{{ 200 }}       // number\n\n### Blended Template:\n{{ \"Status\" }}  // string\n{{ 200 }}       // number"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to truncate the variable \"price\" and render it\n\n### Jinja Template:\n{{ price | truncate }}\n\n### Blended Template:\n{{ truncate(price) }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print \"Price:\" and 99.99.\n\n### Jinja Template:\n{{ \"Price:\" }}  // string\n{{ 99.99 }}     // number\n\n### Blended Template:\n{% print \"Price:\" %}  // string\n{% print 99.99 %}     // number"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert number 42 to string and set it to variable num_str.\n\n### Jinja Template:\n{% set num_str = 42 | string %}\n\n### Blended Template:\n{% set num_str = 42 | string %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to truncate 3.14159 and print it\n\n### Jinja Template:\n{{ 3.14159 | truncate }}\n\n### Blended Template:\n{% print truncate(3.14159) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render \"Count\" and 0.\n\n### Jinja Template:\n{{ \"Count\" }}  // string\n{{ 0 }}        // number\n\n### Blended Template:\n{{ \"Count\" }}  // string\n{{ 0 }}        // number"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which joins \"Good\" and \"Morning\" and render the result\n\n### Jinja Template:\n{{ \"Good\" + \"Morning\" }}\n\n### Blended Template:\n{{ \"Good\" ~ \"Morning\" }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to set 'msg' variable to \"Hi\" if condition is true else set 'msg' variable to \"Hello\". Print it after conditional block\n\n### Jinja Template:\n{% if condition %}\n  {% set msg = \"Hi\" %}\n{% else %}\n  {% set msg = \"Hello\" %}\n{% endif %}\n{{ msg }}  {# Valid \u2013 will render either \"Hi\" or \"Hello\" #}\n\n### Blended Template:\n{% set msg = \"temp\" %} \n{% if condition %}\n  {% set msg = \"Hi\" %}\n{% else %}\n  {% set msg = \"Hello\" %}\n{% endif %}\n{% print msg %}  {# Valid \u2013 will render either \"Hi\" or \"Hello\" #}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"article_title\" to title case and render it.\n\n### Jinja Template:\n{{ article_title | title }}\n\n### Blended Template:\n{{ title(article_title) }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to set 'grade' variable to \"Pass\" if score >= 50 else set 'grade' to \"Fail\". Print it after conditional block\n\n### Jinja Template:\n{% if score >= 50 %}\n  {% set grade = \"Pass\" %}\n{% else %}\n  {% set grade = \"Fail\" %}\n{% endif %}\n{{ grade }}\n\n### Blended Template:\n{% set grade = \"\" %}\n{% if score >= 50 %}\n  {% set grade = \"Pass\" %}\n{% else %}\n  {% set grade = \"Fail\" %}\n{% endif %}\n{% print grade %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print a list [1, 2, 3]\n\n### Jinja Template:\n{{ [1, 2, 3] }} // list is valid here\n\n### Blended Template:\n{% print [1, 2, 3] %} // gives error"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to truncate variable \"weight\" and store in int_weight variable\n\n### Jinja Template:\n{% set int_weight = weight | truncate %}\n\n### Blended Template:\n{% set int_weight = truncate(weight) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nCreate a Jinja2 template that takes a list named names = [\"Alice\", \"Bob\", \"Charlie\"] and formats it into \"User: Alice, Admin: Bob, Guest: Charlie\" using string filter.\n\n### Jinja Template:\n{% set names = [\"Alice\", \"Bob\", \"Charlie\"] %}\n{{ names|string(\"User: %s, Admin: %s, Guest: %s\") }}\n\n### Blended Template:\n{% set names = [\"Alice\", \"Bob\", \"Charlie\"] %}\n{{ names|string(\"User: %s, Admin: %s, Guest: %s\") }}"}
