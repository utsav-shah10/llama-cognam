{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\njoin variable \"first_name\" and \"last_name\" with a space and print it\n\n### Jinja Template:\n{{ first_name + \" \" + last_name }}\n\n### Blended Template:\n{% print first_name ~ \" \" ~ last_name %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"id\" to string and store in \"user_id\"\n\n### Jinja Template:\n{% set user_id = id | string  }\n\n### Blended Template:\n{% set user_id = id | string  %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable files and display each filename with extension .txt\n\n### Jinja Template:\n{% for file in files %}{{ file }}.txt{% endfor %}\n\n### Blended Template:\n{% for file in files %}{% print (file ~\".txt\") %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to create a range from variable start_num to 20 and store in range_data then print Created range\n\n### Jinja Template:\n{% set range_data = range(start_num, 21) %}Created range\n\n### Blended Template:\n{% set range_data = range(start_num, 21) %}{% print \"Created range\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to 9.3 and store in variable floored_value then render it\n\n### Jinja Template:\n{% set floored_value = 9.3 | floor %}{{ floored_value }}\n\n### Blended Template:\n{% set floored_value =  floor(9.3) %}{{ floored_value }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable tags and render each tag in uppercase with #\n\n### Jinja Template:\n{% for tag in tags %}#{{ tag | upper }}{% endfor %}\n\n### Blended Template:\n{% for tag in tags %}#{{ upper(tag) }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to get the length of variable \"shopping_cart\" and store in \"item_count\", then print \"Items: \" + item_count\n\n### Jinja Template:\n{% set item_count = shopping_cart | length%}\r\nItems: {{item_count}}\n\n### Blended Template:\n{% set item_count = length(shopping_cart) %}\r\n{% set temp = \"Items: \" ~ item_count | string %}\r\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named actions and print Create | Update | Delete\n\n### Jinja Template:\n{% block actions %}Create | Update | Delete{% endblock %}\n\n### Blended Template:\n{% block actions %}Create | Update | Delete{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate \"Mr.\" and variable \"surname\" and print it\n\n### Jinja Template:\n{{ \"Mr. \" + surname }}\n\n### Blended Template:\n{% set temp = \"Mr. \" ~  surname %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\njoin \"Thank\" and \"You\" with a space and print it\n\n### Jinja Template:\n{{ \"Thank\" ~ \" \"  ~\"You\" }}\n\n### Blended Template:\n{% set temp = \"Thank\" ~ \"You\" %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"greeting\" to \"Good morning\" if time < 12, else \"Good evening\", then print it\n\n### Jinja Template:\n{% set greeting = \"Good morning\" if time < 12 else \"Good evening\" %}\r\n{{ greeting }}\n\n### Blended Template:\n{% set greeting = \"\" %} {% if time < 12 %} {% set greeting = \"Good morning\" %} {% else %} {% set greeting = \"Good evening\" %} {% endif %} {{greeting}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through numbers 5 to 8 and display each number with index\n\n### Jinja Template:\n{% for i in range(5 ,9) %}{{ loop.index }}: {{ i }}{% endfor %}\n\n### Blended Template:\n{% for i in range(5 ,9) %}{{ loop.index }}: {{ i }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named widget and print variable widget_title + : + variable widget_data\n\n### Jinja Template:\n{% block widget %}{{ widget_title }}: {{ widget_data }}{% endblock %}\n\n### Blended Template:\n{% block widget %}{{ widget_title ~ \": \" ~ widget_data }}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named timestamp that takes time parameter and formats with brackets\n\n### Jinja Template:\n{% macro timestamp(time) %}[{{ time }}]{% endmacro %}\n\n### Blended Template:\n{% macro timestamp(time) %}{% print \"[\" ~ time ~ \"]\" %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named create_list_item that takes text parameter and creates li element\n\n### Jinja Template:\n{% macro create_list_item(text) %}<li>{{ text }}</li>{% endmacro %}\n\n### Blended Template:\n{% macro create_list_item(text) %}<li>{{ text }}</li>{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"visibility\" to \"public\" if shared is true, else \"private\", then render \"Status: \" + visibility\n\n### Jinja Template:\n{% set visibility = \"public\" if shared else \"private\" %}\r\nStatus: {{ visibility }}\n\n### Blended Template:\n{% set visibility = \"\" %} {% if shared %} {% set visibility = \"public\" %} {% else %} {% set visibility = \"private\" %} {% endif %} {{ \"Status: \" ~ visibility }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named styles and print variable custom_css\n\n### Jinja Template:\n{% block styles %}{{ custom_css }}{% endblock %}\n\n### Blended Template:\n{% block styles %}{% print custom_css %}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"score\" to string and store in \"result\"\n\n### Jinja Template:\n{% set result = score | string % }\n\n### Blended Template:\n{% set result = score | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named discount_price that takes price and customer_type parameters, set discount to 20 if customer_type is premium else 10, return price - discount\n\n### Jinja Template:\n{% macro discount_price(price, customer_type) %}{% set discount = 20 if customer_type == \"premium\" else 10 %}{{ price - discount }}{% endmacro %}\n\n### Blended Template:\n{% macro discount_price(price, customer_type) %}{% set discount = 0 %}{% if customer_type == \"premium\" %}{% set discount = 20 %}{% else %}{% set discount = 10 %}{% endif %}{{ price - discount }}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through numbers 1 to 4 and print Level + number if number > 2\n\n### Jinja Template:\n{% for i in range(1, 5) %}{% if i > 2 %}Level {{ i }}{% endif %}{% endfor %}\n\n### Blended Template:\n{% for i in range(1, 5) %}{% if i > 2 %}{% print \"Level \" ~  i|string %}{% endif %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nrender the number 100\n\n### Jinja Template:\n{{ 100 }}\n\n### Blended Template:\n{{100}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through array variable emails and render each email in lowercase\n\n### Jinja Template:\n{% for email in emails %}{{ email | lower }}{% endfor %}\n\n### Blended Template:\n{% for email in emails %}{{ lower(email) }}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a block named sidebar and render variable sidebar_content\n\n### Jinja Template:\n{% block sidebar %}{{ sidebar_content }}{% endblock %}\n\n### Blended Template:\n{% block sidebar %}{{ sidebar_content }}{% endblock %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to calculate the mean of array variable \"scores\" and print the result\n\n### Jinja Template:\n{{ scores | mean }}\n\n### Blended Template:\n{% print mean(scores) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"count\" to 10 and render it\n\n### Jinja Template:\n{% set count = 10 }\r\n{{ count }}\n\n### Blended Template:\n{% set count = 10 %}\r\n{{ count }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to variable distance and store in rounded_distance then render it\n\n### Jinja Template:\n{% set rounded_distance = distance | floor %}{{ rounded_distance }}\n\n### Blended Template:\n{% set rounded_distance = floor(distance) %}{{ rounded_distance }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate variable \"prefix\" and \"suffix\" and render it\n\n### Jinja Template:\n{{ prefix }}{{ suffix }}\n\n### Blended Template:\n{{ prefix ~ suffix }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"department\" to uppercase and render it\n\n### Jinja Template:\n{{ department.upper() }}\n\n### Blended Template:\n{{ upper(department) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nrender the number -5\n\n### Jinja Template:\n{{ -5 }}\n\n### Blended Template:\n{{ -5 }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to create a range from 5 to variable end_num and assign it to variable 'a'.\n\n### Jinja Template:\n{% set a = range(5, end_num) %}\n\n### Blended Template:\n{% set a = range(5, end_num) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named format_percentage that takes decimal parameter, set percentage to decimal * 100, return percentage with % symbol\n\n### Jinja Template:\n{% macro format_percentage(decimal) %}{{ (decimal * 100) }}%{% endmacro %}\n\n### Blended Template:\n{% macro format_percentage(decimal) %}{{ (decimal * 100) }}%{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nprint the string \"Loading...\"\n\n### Jinja Template:\n{{ \"Loading...\" }}\n\n### Blended Template:\n{% print \"Loading...\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ncreate a macro named validate_email that takes email parameter, set is_valid to true if @ in email else false, print Email validation: + is_valid\n\n### Jinja Template:\n{% macro validate_email(email) %}{% set is_valid = '@' in email %}Email validation: {{ is_valid }}{% endmacro %}\n\n### Blended Template:\n{% macro validate_email(email) %}{% set is_valid = false %}{% if '@' in email %}{% set is_valid = true %}{% else %}{% set is_valid = false %}{% endif %}{% print \"Email validation: \" ~ is_valid|string %}{% endmacro %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through variable files and display each filename with extension .txt\n\n### Jinja Template:\n{% for file in files %}{{ file }}.txt{% endfor %}\n\n### Blended Template:\n{% for file in files %}{{ file }}.txt{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"contact us\" to title case and render it\n\n### Jinja Template:\n{{ \"contact us\" | title }}\n\n### Blended Template:\n{{ title(\"contact us\")}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"notification\" to \"enabled\" if alerts is true, else \"disabled\", then print \"Alerts: \" + notification\n\n### Jinja Template:\n{% set notification = \"enabled\" if alerts else \"disabled\" %}\r\nAlerts: {{ notification }}\n\n### Blended Template:\n{% set notification = \"\" %} {% if alerts %} {% set notification = \"enabled\" %} {% else %} {% set notification = \"disabled\" %} {% endif %} {% set temp = \"Alerts: \" ~ notification %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to variable \"price\" and render it\n\n### Jinja Template:\n{{ price | floor }}\n\n### Blended Template:\n{{ floor(price)}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nloop through numbers 1 to 5 and print each number\n\n### Jinja Template:\n{% for i in range(1, 6) %}{{ i }}{% endfor %}\n\n### Blended Template:\n{% for i in range(1 , 6) %}{% print i %}{% endfor %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\ntruncate variable \"salary\" and print it\n\n### Jinja Template:\n{{ salary|truncate(5) }}\n\n### Blended Template:\n{% print truncate(salary, 2) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\njoin \"Good\" and \"Bye\" and render the result\n\n### Jinja Template:\n{{ \"Good\" + \"Bye\" }}\n\n### Blended Template:\n{{ join(\"Good\", \"Bye\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"mode\" to \"debug\" if development is true, else \"production\", then print \"Mode: \" + mode\n\n### Jinja Template:\n{% set mode = \"debug\" if development else \"production\" %}\r\nMode: {{ mode }}\n\n### Blended Template:\n{% set mode = \"\" %} {% if development %} {% set mode = \"debug\" %} {% else %} {% set mode = \"production\" %} {% endif %} {% print \"Mode: \" ~ mode %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to create a range from 0 to variable limit and assign it to variable 'a'.\n\n### Jinja Template:\n{% set a = range(0, limit) %}\n\n### Blended Template:\n{% set a = range(0, limit) %}\n\n"}
