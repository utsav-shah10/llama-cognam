{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function string: The Jinja filter | string is replaced by a function call: string(variable).### Task Description:\nCreate a Jinja2 template that takes a list named names = [\"Alice\", \"Bob\", \"Charlie\"] and formats it into \"User: Alice, Admin: Bob, Guest: Charlie\" using string filter.\n\n### Jinja Template (for reference):\n{% set names = [\"Alice\", \"Bob\", \"Charlie\"] %}\n{{ names|string(\"User: %s, Admin: %s, Guest: %s\") }}\n\n### Blended Template:\n{% set names = [\"Alice\", \"Bob\", \"Charlie\"] %}\n{{ names|string(\"User: %s, Admin: %s, Guest: %s\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Print: The {% print ... %} statement only accepts a string or a number as input.### Task Description:\nWrite a jinja template to print \"Welcome\" and the number 100.\n\n### Jinja Template (for reference):\n{{ \"Welcome\" }}   \n{{ 100 }}        \n\n### Blended Template:\n{% print \"Welcome\" %}   \n{% print 100 %}        \n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n String Concatenation: The + operator is invalid for strings; use the tilde (~) operator instead (e.g., \"Hello\" ~ \"World\").### Task Description:\nwrite a jinja template which combines variable \"first_name\" and \"last_name\" and render the result\n\n### Jinja Template (for reference):\n{{ first_name + last_name }}\n\n### Blended Template:\n{{ first_name ~ last_name }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function lower: The Jinja filter | lower is replaced by a function call: lower(variable).### Task Description:\nwrite a valid jinja template to convert variable \"title\" to lowercase and render it\n\n### Jinja Template (for reference):\n{{ title | lower }}\n\n### Blended Template:\n{{ lower(title) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Scoping: Variables set inside an if/else block must be declared before the block to be used outside of it.### Task Description:\nWrite a jinja template to set 'grade' variable to \"Pass\" if score >= 50 else set 'grade' to \"Fail\". Print it after conditional block\n\n### Jinja Template (for reference):\n{% if score >= 50 %}\n  {% set grade = \"Pass\" %}\n{% else %}\n  {% set grade = \"Fail\" %}\n{% endif %}\n{{ grade }}\n\n### Blended Template:\n{% set grade = \"\" %}\n{% if score >= 50 %}\n  {% set grade = \"Pass\" %}\n{% else %}\n  {% set grade = \"Fail\" %}\n{% endif %}\n{% print grade %}\n\n"}
