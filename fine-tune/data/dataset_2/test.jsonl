{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render \"Status\" and 200.\n\n### Jinja Template:\n{{ \"Status\" }}   \n{{ 200 }}        \n\n### Blended Template:\n{{ \"Status\" }}   \n{{ 200 }}        "}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to set \"user profile\" as title case and print it.\n\n### Jinja Template:\n{{ \"user profile\" | title }}\n\n### Blended Template:\n{% print title(\"user profile\") %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render boolean value\n\n### Jinja Template:\n{{ true }} \n\n### Blended Template:\nBlended template cannot be generated"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which combines variable \"greeting\" and \"name\" and print the result\n\n### Jinja Template:\n{{ greeting + name }}\n\n### Blended Template:\n{% set result = greeting ~ name %} {% print result %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nCreate a Jinja2 template that takes a list named scores = [85, 92, 78] and formats it into \"Test1(85), Test2(92), Test3(78)\" using string filter.\n\n### Jinja Template:\n{% set scores = [85, 92, 78] %}\n{{ scores|string(\"Test1(%s), Test2(%s), Test3(%s)\") }}\n\n### Blended Template:\n{% set scores = [85, 92, 78] %}\n{{ scores|string(\"Test1(%s), Test2(%s), Test3(%s)\") }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print \"Welcome\" and the number 100.\n\n### Jinja Template:\n{{ \"Welcome\" }}   \n{{ 100 }}        \n\n### Blended Template:\n{% print \"Welcome\" %}   \n{% print 100 %}        "}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to set 'discount' variable to 10 if is_member is true else set 'discount' to 0. Render it after the conditional block\n\n### Jinja Template:\n{% if is_member %}\n  {% set discount = 10 %}\n{% else %}\n  {% set discount = 0 %}\n{% endif %}\n{{ discount }}\n\n### Blended Template:\n{% set discount = 0 %}\n{% if is_member %}\n  {% set discount = 10 %}\n{% else %}\n  {% set discount = 0 %}\n{% endif %}\n{{ discount }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print \"Price:\" and 99.99.\n\n### Jinja Template:\n{{ \"Price:\" }}   \n{{ 99.99 }}      \n\n### Blended Template:\n{% print \"Price:\" %}   \n{% print 99.99 %}      "}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print a list [1, 2, 3]\n\n### Jinja Template:\n{{ [1, 2, 3] }} \n\n### Blended Template:\nnan"}
