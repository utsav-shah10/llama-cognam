{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"result\" to \"pass\" if score >= 60, else \"fail\", then print it\n\n### Jinja Template:\n{% set result = \"pass\" if score >= 60 else \"fail\" %}\n{{ result }}\n\n### Blended Template:\n{% set result = \"\" %} {% if score >= 60 %} {% set result = \"pass\" %} {% else %} {% set result = \"fail\" %} {% endif %} {% print result %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to get the length of variable \"shopping_cart\" and store in \"item_count\", then print \"Items: \" + item_count\n\n### Jinja Template:\n{% set item_count =  shopping_cart | length%}\nItems: {{item_count}}\n\n### Blended Template:\n{% set item_count =  length(shopping_cart) %}\n{% set temp =  \"Items: \" ~ item_count | string %}\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"SYSTEM\" to lowercase and print it\n\n### Jinja Template:\n{{ \"SYSTEM\".lower() }}\n\n\n### Blended Template:\n{% print lower(\"SYSTEM\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to calculate the mean of variable \"test_scores\" and print \"Mean score: \" + result\n\n### Jinja Template:\n{% set temp =  test_scores| mean%}\nMean score: {{temp}}\n\n### Blended Template:\n{% set temp =  \"Mean score: \" ~ mean(test_scores) | string%}\n{{temp}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"category\" to uppercase, then set \"section\" to result + \" ITEMS\", then print it\n\n### Jinja Template:\n{{ category.upper() + \" ITEMS\" }}\n\n### Blended Template:\n{% set section = upper(category) ~ \" ITEMS\" %} {% print section %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"status\" to \"online\" if active is true, else \"offline\", then convert to uppercase and print it\n\n### Jinja Template:\n{% set status = 'online' if active else 'offline' %}\n{{ status.upper() }}\n\n### Blended Template:\n{% set status = \"\" %} {% if active%} {% set status = \"online\"%} {% else %} {% set status = \"offline\" %} {% endif %} {% print upper(status) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to create a range from 5 to 20 and store in variable \"range_values\", then print \"Range: \" + length of range_values\n\n### Jinja Template:\n{% set range_values = range(5, 21) %}\nRange: {{ range_values | length }}\n\n### Blended Template:\n{% set range_values =  range(5, 21) %}\n{% set temp =  \"Range: \" ~ length(range_values)| string %}\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"message\" to \"Good morning\" and print it\n\n### Jinja Template:\n{% set message = \"Good morning\" %}\n{{ message }}\n\n### Blended Template:\n{% set message = \"Good morning\" %}\n{% print message %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert variable \"id\" to string and store in \"user_id\"\n\n### Jinja Template:\n{% set user_id = id | string  }\n\n### Blended Template:\n{% set user_id = id | string  }\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert the number 0 to string and store in \"zero_str\"\n\n### Jinja Template:\n{% set zero_str = 0 | string %}\n\n### Blended Template:\n{% set zero_str = 0 | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nprint the string \"Hello\"\n\n### Jinja Template:\n{{ \"Hello\" }}\n\n### Blended Template:\n{% print \"Hello\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"BACKUP COMPLETED\" to title case, then set \"status_msg\" to result, then print it\n\n### Jinja Template:\n{% set status_msg = \"BACKUP COMPLETED\".title() %}\n{{status_msg }}\n\n### Blended Template:\n{% set status_msg = title(\"BACKUP COMPLETED\") %}\n{% print status_msg %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconvert \"system administrator\" to title case, then set \"role_name\" to result, then render it\n\n### Jinja Template:\n{% set role_name = \"system administrator\" | title %}\n{{ role_name }}\n\n### Blended Template:\n{% set role_name = title(\"system administrator\") %} {{ role_name }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"logging\" to \"verbose\" if debug_mode is true, else \"minimal\", then print \"Logging: \" + logging\n\n### Jinja Template:\n{% set logging = \"verbose\" if debug_mode else \"minimal\" %}\nLogging: {{ logging }}\n\n### Blended Template:\n{% set logging = \"\" %} {% if debug_mode %} {% set logging = \"verbose\" %} {% else %} {% set logging = \"minimal\" %} {% endif %} {% set temp = \"Logging: \" ~ logging %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nrender the number -5\n\n### Jinja Template:\n{{ -5 }}\n\n### Blended Template:\n{{ -5 }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to variable \"temperature\" and print \"Temperature: \" + result\n\n### Jinja Template:\n{% set temp =  temperature | floor%}\nTemperature: {{temp}}\n\n### Blended Template:\n{% set temp =  \"Temperature: \" ~ floor(temperature) | string %}\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate \"Order #\" and variable \"order_id\", then set \"order_label\" to result, then print it\n\n### Jinja Template:\n{% set order_label = \"Order #\" + order_id %}\n{{ order_label }}\n\n### Blended Template:\n{% set order_label = \"Order #\" ~ order_id %} {% print order_label %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate variable \"protocol\" and \"://\" and variable \"hostname\", then print \"URL: \" + result\n\n### Jinja Template:\n{{ \"URL: \" ~ protocol ~ \"://\" ~ hostname }}\n\n### Blended Template:\n{% set temp = \"URL: \" ~ protocol ~ \"://\" ~ hostname %}\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"level\" to 1 and render it\n\n### Jinja Template:\n{% set level = 1 %} {{level}}\n\n### Blended Template:\n{% set level = 1 %} {{level}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a template to apply floor function to the number 3.7 and print the result\n\n### Jinja Template:\n{{ 3.7 | floor }}\n\n### Blended Template:\n{% print floor(3.7) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nset variable \"compression\" to \"enabled\" if file_size > 1000, else \"disabled\", then render \"Compression: \" + compression\n\n### Jinja Template:\n{% set compression = \"enabled\" if file_size > 1000 else \"disabled\" %}\nCompression: {{ compression }}\n\n### Blended Template:\n{% set compression = \"\" %} {% if file_size > 1000 %} {% set compression = \"enabled\" %} {% else %} {% set compression = \"disabled\" %} {% endif %} {{ \"Compression: \" ~ compression }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nconcatenate \"Hello\" and \"World\" and render the result\n\n### Jinja Template:\n{{ \"Hello\" ~ \"World\" }}\n\n### Blended Template:\n{{ \"Hello\" ~ \"World\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\njoin variable \"city\" and \"country\", convert it to upper case and print it.\n\n### Jinja Template:\n{{ (city + country) | upper }}\n\n### Blended Template:\n{% print  upper(city ~ country) %}\n\n"}
