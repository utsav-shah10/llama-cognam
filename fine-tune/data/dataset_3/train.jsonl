{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n186. set variable \"logging\" to \"verbose\" if debug_mode is true, else \"minimal\", then print \"Logging: \" + logging\n\n### Jinja Template:\n{% set logging = \"verbose\" if debug_mode else \"minimal\" %}\nLogging: {{ logging }}\n\n### Blended Template:\n{% set logging = \"\" %} {% if debug_mode %} {% set logging = \"verbose\" %} {% else %} {% set logging = \"minimal\" %} {% endif %} {% set temp = \"Logging: \" ~ logging %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n14. set variable \"message\" to \"Good morning\" and print it\n\n### Jinja Template:\n{% set message = \"Good morning\" %}\n{{ message }}\n\n### Blended Template:\n{% set message = \"Good morning\" %}\n{% print message %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n192. set variable \"authentication\" to \"required\" if security_level > 2, else \"optional\", then print \"Auth: \" + authentication\n\n### Jinja Template:\n{% set authentication = \"required\" if security_level > 2 else \"optional\" %}\nAuth: {{ authentication }}\n\n### Blended Template:\n{% set authentication = \"\" %} {% if security_level > 2 %} {% set authentication = \"required\" %} {% else %} {% set authentication = \"optional\" %} {% endif %} {% set temp = \"Auth: \" ~ authentication %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n210. Write a template to calculate the mean of variable \"temperatures\" and render it\n\n### Jinja Template:\n{{ temperature | mean }}\n\n### Blended Template:\n{{ temperature | mean }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n8. convert the string \"world\" to uppercase and print it\n\n### Jinja Template:\n{{ \"world\" | upper }}\n\n### Blended Template:\n{% print  upper(\"world\") % }\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n11. convert the number 25 to string and store in variable \"age_str\"\n\n### Jinja Template:\n{% set age_str = 25 | string %}\n\n### Blended Template:\n{% set age_str = 25 | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n13. join variable \"first_name\" and \"last_name\" with a space and renderit\n\n### Jinja Template:\n{{ first_name ~ \" \" ~ last_name }}\n\n### Blended Template:\n{{ first_name ~ \" \" ~ last_name }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n152. set variable \"message\" to \"Welcome back\" if returning_user is true, else \"Welcome\", then print result + \"!\"\n\n### Jinja Template:\n{% if returning_user %}\n  {{ message = \"Welcome back\" }}\n{% else %}\n  {{ message = \"Welcome\" }}\n{% endif %}\n{{ message + \"!\" }}\n\n### Blended Template:\n{% set message = \"\" %} {% if returning_user %} {% set message = \"Welcome back\" %} {% else %} {% set message = \"Welcome\" %} {% endif %} {% print message ~ \"!\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n206. Write a template to get the length of object variable \"user_data\" and render it\n\n### Jinja Template:\n{{ user_data | length }}\n\n### Blended Template:\n{{ user_data | length }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n46. Store the number 1000 in a variable \"num\", then render it after joining it with 12\n\n### Jinja Template:\n{% set num = 1000 %}\n{{ num | string + \"12\" }}\n\n### Blended Template:\n{% set num = 1000 %}\n{{ num | string ~ \"12\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n161. convert \"user profile settings\" to title case, then set \"page_title\" to result, then print it\n\n### Jinja Template:\n{% set page_title = \"user profile settings\" | title %}\n{{ page_title }}\n\n### Blended Template:\n{% set page_title = title(\"user profile settings\") %} {% print page_title %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n31. convert the number 0 to string and store in \"zero_str\"\n\n### Jinja Template:\n{% set zero_str = 0 | string %}\n\n### Blended Template:\n{% set zero_str = \"0\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n153. truncate variable \"score\", then set variable \"grade\" to \"A\" if result >= 90 else \"B\", then print \"Grade: \" + grade\n\n### Jinja Template:\n{% set score_truncated = score | string(length=2) %}\n{% set grade = \"A\" if score_truncated >= \"90\" else \"B\" %}\nGrade: {{ grade }}\n\n### Blended Template:\n{% set score_truncated = truncate(score) %} {% set grade = \"\" %} {% if score_truncated >= 90 %} {% set grade = \"A\" %} {% else %} {% set grade = \"B\" %} {% endif %} {% print \"Grade: \" ~ grade %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n179. convert \"DATA MIGRATION\" to title case, then concatenate with \" Process\" and render the result\n\n### Jinja Template:\n{{ \"DATA MIGRATION\".title() + \" Process\" }}\n\n### Blended Template:\n{{ title(\"DATA MIGRATION\".) ~ \" Process\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n216. Write a template to create a range from 5 to 20 and store in variable \"range_values\", then print \"Range: \" + length of range_values\n\n### Jinja Template:\n{% set range_values = range(5, 21) %}\nRange: {{ range_values | length }}\n\n### Blended Template:\n{% set range_values =  range(5, 21) %}\n{% set temp =  \"Range: \" ~ length(range_values)| string %}\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n199. concatenate \"Report \" and variable \"report_id\" and \" - \" and variable \"report_date\", then render the result\n\n### Jinja Template:\n{{ \"Report \" + report_id + \" - \" + report_date }}\n\n### Blended Template:\n{{ \"Report \" ~ report_id ~ \" - \" ~ report_date }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n209. Write a template to calculate the mean of array variable \"scores\" and print the result\n\n### Jinja Template:\n{{ scores | mean }}\n\n### Blended Template:\n{% print mean(scores) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n16. print the string \"Error: Not found\"\n\n### Jinja Template:\n{{ \"Error: Not found\" }}\n\n### Blended Template:\n{% print \"Error: Not found\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n15. set variable \"count\" to 10 and render it\n\n### Jinja Template:\n{% set count = 10 }\n{{ count }}\n\n### Blended Template:\n{% set count = 10 }\n{{ count }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n34. set variable \"level\" to 1 and render it\n\n### Jinja Template:\n{% set level = 1 %} {{level}}\n\n### Blended Template:\n{% set level = 1 %} {{level}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n48. convert \"contact us\" to title case and render it\n\n### Jinja Template:\n{{ \"contact us\" | title }}\n\n### Blended Template:\n{{ title(\"contact us\")}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n13. join variable \"first_name\" and \"last_name\" with a space and print it\n\n### Jinja Template:\n{{ first_name + \" \" + last_name }}\n\n### Blended Template:\n{% print first_name ~ \" \" ~ last_name %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n203. Write a template to apply floor function to 15.99 and store in variable \"rounded_price\", then print it\n\n### Jinja Template:\n{% set rounded_price = 15.99 | floor %} {{rounded_price}}\n\n### Blended Template:\n{% set rounded_price = 15.99 | floor %} {% print rounded_price %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n201. Write a template to apply floor function to the number 3.7 and print the result\n\n### Jinja Template:\n{{ 3.7 | floor }}\n\n### Blended Template:\n{% print floor(3.7) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n169. concatenate variable \"protocol\" and \"://\" and variable \"hostname\", then print \"URL: \" + result\n\n### Jinja Template:\n{{ \"URL: \" ~ protocol ~ \"://\" ~ hostname }}\n\n### Blended Template:\n{% set temp = \"URL: \" ~ protocol ~ \"://\" ~ hostname %}\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n160. set variable \"theme\" to \"dark\" if preference == \"night\", else \"light\", then render \"Theme: \" + theme\n\n### Jinja Template:\n{% set theme = \"dark\" if preference == \"night\" else \"light\" %}\nTheme: {{ theme }}\n\n### Blended Template:\n{% set theme = \"\" %} {% if preference == \"night\" %} {% set theme = \"dark\" %} {% else %} {% set theme = \"light\" %} {% endif %} {{ \"Theme: \" ~ theme }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n204. Write a template to apply floor function to variable \"temperature\" and print \"Temperature: \" + result\n\n### Jinja Template:\n{% set temp =  temperature | floor%}\nTemperature: {{temp}}\n\n### Blended Template:\n{% set temp =  \"Temperature: \" ~ floor(temperature) | string %}\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n44. set variable \"priority\" to \"high\" and render it after converting to upper case\n\n### Jinja Template:\n{% set priority = \"high\" %}\n{{ priority | upper }}\n\n\n### Blended Template:\n{% set priority = \"high\" %}\n{{ upper(priority) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n143. set variable \"greeting\" to \"Good morning\" if time < 12, else \"Good evening\", then print it\n\n### Jinja Template:\n{% set greeting = \"Good morning\" if time < 12 else \"Good evening\" %}\n{{ greeting }}\n\n### Blended Template:\n{% set greeting = \"\" %} {% if time < 12 %} {% set greeting = \"Good morning\" %} {% else %} {% set greeting = \"Good evening\" %} {% endif %} {{greeting}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n26. print the string \"Loading...\"\n\n### Jinja Template:\n{{ \"Loading...\" }}\n\n### Blended Template:\n{% print \"Loading...\" }\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n10. truncate the number 3.14159 and render it\n\n### Jinja Template:\n{{ 3.14159 | truncate }}\n\n### Blended Template:\n{{ truncate(3.14.159) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n170. convert variable \"error_type\" to uppercase, then set \"error_label\" to \"ERROR: \" + result, then print it\n\n### Jinja Template:\n{% set error_label = \"ERROR: \" + error_type | upper %}\n{{ error_label }}\n\n### Blended Template:\n{% set error_label = \"ERROR: \" ~ upper(error_type) %} {% print error_label %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n37. convert \"ADMIN\" to lowercase and print it\n\n### Jinja Template:\n{{ \"ADMIN\" | lower }}\n\n### Blended Template:\n{% print lower(\"ADMIN\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n188. convert variable \"module_name\" to uppercase, then set variable \"module_label\" to \"MODULE: \" + result, then print it\n\n### Jinja Template:\n{% set module_label = \"MODULE: \" ~ module_name | upper %}\n{{ module_label }}\n\n### Blended Template:\n{% set module_label = \"MODULE: \" ~ upper(module_name) %} {% print module_label %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n168. set variable \"connection\" to \"secure\" if ssl is true, else \"insecure\", then render \"Connection: \" + connection\n\n### Jinja Template:\n{% set connection = \"secure\" if ssl else \"insecure\" %}\nConnection: {{ connection }}\n\n### Blended Template:\n{% set connection = \"\" %} {% if ssl %} {% set connection = \"secure\" %} {% else %} {% set connection = \"insecure\" %} {% endif %} {{ \"Connection: \" ~ connection }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n141. set variable \"result\" to \"pass\" if score >= 60, else \"fail\", then print it\n\n### Jinja Template:\n{% set result = \"pass\" if score >= 60 else \"fail\" %}\n{{ result }}\n\n### Blended Template:\n{% set result = \"\" %} {% if score >= 60 %} {% set result = \"pass\" %} {% else %} {% set result = \"fail\" %} {% endif %} {% print result %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n214. Write a template to create a range from 0 to variable \"max_count\" and render the result\n\n### Jinja Template:\n{{ range(0, max_count) }}\n\n### Blended Template:\n{{ range(0, max_count) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n190. truncate variable \"disk_space\", then set new variable \"storage\" to result + \"GB\", then print \"Storage: \" + storage\n\n### Jinja Template:\n{% set storage = disk_space | truncate ~ \"GB\" %}\n{{ \"Storage: \" ~ storage }}\n\n### Blended Template:\n{% set storage = truncate(disk_space) ~ \"GB\" %} {% set temp = \"Storage: \" ~ storage %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n189. set variable \"backup\" to \"automatic\" if scheduled is true, else \"manual\", then render \"Backup: \" + backup\n\n### Jinja Template:\n{% set backup = \"automatic\" if scheduled else \"manual\" %}\nBackup: {{ backup }}\n\n### Blended Template:\n{% set backup = \"\" %} {% if scheduled %} {% set backup = \"automatic\" %} {% else %} {% set backup = \"manual\" %} {% endif %} {{ \"Backup: \" ~ backup }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n47. convert \"SYSTEM\" to lowercase and print it\n\n### Jinja Template:\n{{ \"SYSTEM\".lower() }}\n\n\n### Blended Template:\n{% print lower(\"SYSTEM\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n208. Write a template to get the length of variable \"config_options\" and render\"Total options: \" + result\n\n### Jinja Template:\n{% set temp =  config_options | length%}\nTotal options: {{temp}}\n\n### Blended Template:\n{% set temp =  \"Total options: \" ~ length(config_options) | string%}\n{{temp}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n30. truncate the number 99.99 and print it\n\n### Jinja Template:\n{{ 99.99 | round(0) }}\n\n### Blended Template:\n{% print truncate(99.99) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n184. truncate variable \"memory_usage\", then concatenate with \"MB\" and print \"Memory: \" + result\n\n### Jinja Template:\n{{ \"Memory: \" + memory_usage | truncate(3) + \"MB\" }}\n\n### Blended Template:\n{% set temp =  \"Memory: \" ~ truncate(memory_usage) ~ \"MB\" %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n144. set variable \"access\" to \"granted\" if role == \"admin\", else \"denied\", then render it\n\n### Jinja Template:\n{% set access = \"granted\" if role == \"admin\" else \"denied\" %}\n\n### Blended Template:\n{% set access = \"\" %} {% if role == \"admin\" %} {% set access = \"granted\" %} {% else %} {% set access = \"denied\" %} {% endif %} {{access}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n5. print a variable named \"username\"\n\n### Jinja Template:\n{{ username }}\n\n### Blended Template:\n{% print username %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n28. convert \"DATABASE\" to lowercase and print it\n\n### Jinja Template:\n{{ \"DATABASE\".lower() }}\n\n### Blended Template:\n{% print lower(\"DATABASE\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n172. truncate variable \"duration\", then convert to string and concatenate with \" minutes\", then print it\n\n### Jinja Template:\n{{ duration|truncate(0)|string }} minutes\n\n### Blended Template:\n{% set temp = truncate(duration) | string ~ \" minutes\" %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n219. Write a template to convert color array variable \"rgb_values\" to RGB color using rgbcolor function and store in \"final_color\", then print it\n\n### Jinja Template:\n{% set final_color = rgb_values | rgbcolor %}\n{{ final_color }}\n\n### Blended Template:\n{% set final_color = rgbcolor(rgb_values) %}\n{% print final_color %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n167. convert \"BACKUP COMPLETED\" to title case, then set \"status_msg\" to result, then print it\n\n### Jinja Template:\n{% set status_msg = \"BACKUP COMPLETED\".title() %}\n{{status_msg }}\n\n### Blended Template:\n{% set status_msg = title(\"BACKUP COMPLETED\") %}\n{% print status_msg %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n198. set variable \"synchronization\" to \"enabled\" if sync_mode is true, else \"disabled\", then print \"Sync: \" + synchronization\n\n\n### Jinja Template:\n{% set synchronization = \"enabled\" if sync_mode else \"disabled\" %}\nSync: {{ synchronization }}\n\n### Blended Template:\n{% set synchronization = \"\" %} {% if sync_mode %} {% set synchronization = \"enabled\" %} {% else %} {% set synchronization = \"disabled\" %} {% endif %} {% set temp = \"Sync: \" ~ synchronization %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nRender a boolean value \"true\"\n\n### Jinja Template:\n{{ true }}\n\n### Blended Template:\n{% set temp = true %} {% print temp | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n207. Write a template to get the length of variable \"shopping_cart\" and store in \"item_count\", then print \"Items: \" + item_count\n\n### Jinja Template:\n{% set item_count =  shopping_cart | length%}\nItems: {{item_count}}\n\n### Blended Template:\n{% set item_count =  length(shopping_cart) %}\n{% set temp =  \"Items: \" ~ item_count | string %}\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n39. convert \"user profile\" to title case and print it\n\n### Jinja Template:\n{{ \"user profile\".title() }}\n\n### Blended Template:\n{% print title(\"user profile\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nPrint list [1,2,3]\n\n### Jinja Template:\n{{ [1, 2, 3] }}\n\n### Blended Template:\n{% set temp = [1, 2, 3] %} {% print temp | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n17. render the number 0\n\n### Jinja Template:\n{{ 0 }}\n\n### Blended Template:\n{{ 0 }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n22. convert variable \"id\" to string and store in \"user_id\"\n\n### Jinja Template:\n{% set user_id = id | string  }\n\n### Blended Template:\n{% set user_id = id | string  }\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n202. Write a template to apply floor function to variable \"price\" and render it\n\n### Jinja Template:\n{{ price | floor }}\n\n### Blended Template:\n{{ price | floor }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n182. convert variable \"service_name\" to title case, then set \"display_name\" to result + \" Service\", then print it\n\n### Jinja Template:\n{{ service_name|title }} Service\n\n### Blended Template:\n{% set display_name = title(service_name) ~ \" Service\" %} {% print display_name %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n218. Write a template to convert variable \"color_name\" to RGB color and render it\n\n### Jinja Template:\n{{ color_name | rgbcolor }}\n\n### Blended Template:\n{{ color_name | rgbcolor }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n178. truncate variable \"version_number\", then set variable \"version\" to \"v\" + result, then print it\n\n### Jinja Template:\n{% set version = \"v\" ~ version_number | truncate %}\n{{ version }}\n\n### Blended Template:\n{% set version = \"v\" ~ truncate(version_number) %} {% print version %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n165. set variable \"notification\" to \"enabled\" if alerts is true, else \"disabled\", then print \"Alerts: \" + notification\n\n### Jinja Template:\n{% set notification = \"enabled\" if alerts else \"disabled\" %}\nAlerts: {{ notification }}\n\n### Blended Template:\n{% set notification = \"\" %} {% if alerts %} {% set notification = \"enabled\" %} {% else %} {% set notification = \"disabled\" %} {% endif %} {% set temp = \"Alerts: \" ~ notification %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n3. render the string \"Welcome\"\n\n### Jinja Template:\n{{ \"Welcome\" }}\n\n### Blended Template:\n{{ \"Welcome\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n164. convert variable \"server_name\" to lowercase, then concatenate with \".local\" and print \"Server: \" + result\n\n### Jinja Template:\n{{ 'Server: ' + server_name.lower() + '.local' }}\n\n### Blended Template:\n{% set temp = \"Server: \" ~ lower(server_name) ~ \".local\" %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n2. print the number 42\n\n### Jinja Template:\n{{ 42 }}\n\n### Blended Template:\n{% print 42%}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n8. convert the string \"world\" to uppercase and print it\n\n### Jinja Template:\n{{ \"world\".upper() }}\n\n### Blended Template:\n{% print  upper(\"world\") % }\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n185. convert \"CONFIGURATION LOADED\" to title case, then set \"config_status\" to result, then render it\n\n### Jinja Template:\n{% set config_status = \"CONFIGURATION LOADED\" | title %}\n{{ config_status }}\n\n### Blended Template:\n{% set config_status = title(\"CONFIGURATION LOADED\") %} {{ config_status }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n25. set variable \"status\" to \"active\" and print it\n\n### Jinja Template:\n{% set status = \"active\" %}\n{{ status }}\n\n### Blended Template:\n{% set status = \"active\" %}\n{% print status %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n7. convert the string \"HELLO\" to lowercase and render it\n\n### Jinja Template:\n{{ \"HELLO\" | lower }}\n\n### Blended Template:\n{{ lower(\"HELLO\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n157. set variable \"mode\" to \"debug\" if development is true, else \"production\", then print \"Mode: \" + mode\n\n### Jinja Template:\n{% set mode = \"debug\" if development else \"production\" %}\nMode: {{ mode }}\n\n### Blended Template:\n{% set mode = \"\" %} {% if development %} {% set mode = \"debug\" %} {% else %} {% set mode = \"production\" %} {% endif %} {% print \"Mode: \" ~ mode %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n217. Write a template to convert string \"red\" to RGB color using rgbcolor function and print the result\n\n### Jinja Template:\n{{ \"red\" | rgbcolor }}\n\n### Blended Template:\n{% print rgbcolor(\"red\")  %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n4. render the number 100\n\n### Jinja Template:\n{{ 100 }}\n\n### Blended Template:\n{{100}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n177. set variable \"compression\" to \"enabled\" if file_size > 1000, else \"disabled\", then render \"Compression: \" + compression\n\n### Jinja Template:\n{% set compression = \"enabled\" if file_size > 1000 else \"disabled\" %}\nCompression: {{ compression }}\n\n### Blended Template:\n{% set compression = \"\" %} {% if file_size > 1000 %} {% set compression = \"enabled\" %} {% else %} {% set compression = \"disabled\" %} {% endif %} {{ \"Compression: \" ~ compression }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n180. set variable \"encryption\" to \"on\" if secure_mode is true, else \"off\", then print \"Encryption: \" + encryption\n\n### Jinja Template:\n{% set encryption = \"on\" if secure_mode else \"off\" %}\nEncryption: {{ encryption }}\n\n### Blended Template:\n{% set encryption = \"\" %} {% if secure_mode %} {% set encryption = \"on\" %} {% else %} {% set encryption = \"off\" %} {% endif %} (% set temp = \"Encryption: \" ~ encryption %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n182. convert variable \"service_name\" to title case, then set \"display_name\" to result + \" Service\", then print it\n\n### Jinja Template:\n{% set display_name = service_name | title ~ \" Service\" %}\n{{ display_name }}\n\n### Blended Template:\n{% set display_name = title(service_name) ~ \" Service\" %} {% print display_name %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n173. convert \"system administrator\" to title case, then set \"role_name\" to result, then render it\n\n### Jinja Template:\n{% set role_name = \"system administrator\" | title %}\n{{ role_name }}\n\n### Blended Template:\n{% set role_name = title(\"system administrator\") %} {{ role_name }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n220. Write a template to convert string \"blue\" to RGB color and print \"Color: \" + result\n\n### Jinja Template:\nColor: {{ \"blue\" | rgbcolor }}\n\n### Blended Template:\n{% set temp =  \"Color: \" ~ rgbcolor(\"blue\")%}\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n43. join variable \"city\" and \"country\", convert it to upper case and print it.\n\n### Jinja Template:\n{{ (city + country) | upper }}\n\n### Blended Template:\n{% print  upper(city ~ country) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n31. convert the number 0 to string and store in \"zero_str\"\n\n### Jinja Template:\n{% set zero_str = 0 | string %}\n\n### Blended Template:\n{% set zero_str = 0 | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n41. convert variable \"score\" to string and store in \"result\"\n\n### Jinja Template:\n{% set result = score | string % }\n\n### Blended Template:\n{% set result = score | string % }\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n20. convert \"home page\" to title case and render it\n\n### Jinja Template:\n{{ \"home page\" | title }}\n\n### Blended Template:\n{{ title(\"home page\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n155. set variable \"priority\" to \"high\" if urgent is true, else \"normal\", then convert to uppercase and print it\n\n### Jinja Template:\n{% set priority = \"high\" if urgent else \"normal\" %}\n{{ priority.upper() }}\n\n### Blended Template:\n{% set priority = \"\" %} {% if urgent %} {% set priority = \"high\" %} {% else %} {% set priority = \"normal\" %} {% endif %} {% print upper(priority) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n6. render a variable named \"price\"\n\n### Jinja Template:\n{{ price }}\n\n### Blended Template:\n{{price}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n194. convert variable \"task_name\" to title case, then set \"task_label\" to result + \" Task\", then print it\n\n### Jinja Template:\n{{ task_name|title }} Task\n\n### Blended Template:\n{% set task_label= title(task_name) ~ \" Task\"%}\n{% print task_label %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n163. concatenate \"Order #\" and variable \"order_id\", then set \"order_label\" to result, then print it\n\n### Jinja Template:\n{% set order_label = \"Order #\" + order_id %}\n{{ order_label }}\n\n### Blended Template:\n{% set order_label = \"Order #\" ~ order_id %} {% print order_label %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n187. concatenate \"Session \" and variable \"session_id\", then convert to lowercase and render it\n\n### Jinja Template:\n{{ (\"Session \" ~ session_id) | lower }}\n\n### Blended Template:\n{{ lower(\"Session \" ~ session_id) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n146. convert \"PRODUCT NAME\" to title case, then concatenate with \" - Available\" and render it\n\n### Jinja Template:\n{{ \"PRODUCT NAME\" | title }} - Available\n\n### Blended Template:\n{% set temp = title(\"PRODUCT NAME\")  ~ \"- Available\" %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n1. print the string \"Hello\"\n\n### Jinja Template:\n{{ \"Hello\" }}\n\n### Blended Template:\n{% print \"Hello\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n213. Write a template to create a range from 1 to 10 and store in variable \"numbers\", then print the length of numbers\n\n### Jinja Template:\n{% set numbers = range(1, 11) %}\n{{ numbers | length }}\n\n### Blended Template:\n{% set numbers = range(1, 11) %}\n{% print length(numbers) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n19. convert variable \"title\" to uppercase and render it\n\n### Jinja Template:\n{{ title.upper() }}\n\n### Blended Template:\nError : Title is a reserved keyword in Blended. It cannot be used as variable nam\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n205. Write a template to get the length of array variable \"items\" and print the result\n\n### Jinja Template:\n{{ items | length }}\n\n### Blended Template:\n{% set temp =  length(items) %}\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n158. convert variable \"category\" to uppercase, then set \"section\" to result + \" ITEMS\", then print it\n\n### Jinja Template:\n{{ category.upper() + \" ITEMS\" }}\n\n### Blended Template:\n{% set section = upper(category) ~ \" ITEMS\" %} {% print section %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n166. truncate variable \"rating\", then set \"stars\" to result + \" stars\", then render it\n\n### Jinja Template:\n{{ rating|truncate(3) }} stars\n\n### Blended Template:\n{% set stars = truncate(rating) ~ \" stars\" %} {{ stars }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n181. concatenate variable \"user_type\" and \"_user\", then convert to uppercase and render \"Type: \" + result\n\n### Jinja Template:\n{{ \"Type: \" ~ (user_type ~ \"_user\") | upper }}\n\n### Blended Template:\n{% set temp =  \"Type: \" ~ upper(user_type ~ \"_user\") %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n211. Write a template to calculate the mean of array variable \"ratings\" and store in \"average_rating\", then print \"Average: \" + average_rating\n\n### Jinja Template:\n{% set average_rating =  rating | mean%}\nAverage: {{average_rating}}\n\n### Blended Template:\n{% set average_rating=  mean(rating) %}\n{% set temp =  \"Average: \" ~ average_rating | string %}\n{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n162. set variable \"size\" to \"large\" if quantity > 10, else \"small\", then convert to uppercase and render it\n\n### Jinja Template:\n{% set size = 'large' if quantity > 10 else 'small' }\n{{ size.upper() }}\n\n### Blended Template:\n{% set size = \"\" %} {% if quantity > 10 %} {% set size = \"large\" %} {% else %} {% set size = \"small\" %} {% endif %} {{ upper(size) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n174. set variable \"format\" to \"json\" if api_version > 1, else \"xml\", then print \"Format: \" + format\n\n### Jinja Template:\n{% set format = \"json\" if api_version > 1 else \"xml\" %}\nFormat: {{ format }}\n\n### Blended Template:\n{% set format = \"\" %} {% if api_version > 1 %} {% set format = \"json\" %} {% else %} {% set format = \"xml\" %} {% endif %} {% set temp = \"Format: \" ~ format %}{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n171. set variable \"visibility\" to \"public\" if shared is true, else \"private\", then render \"Status: \" + visibility\n\n### Jinja Template:\n{% set visibility = \"public\" if shared else \"private\" %}\nStatus: {{ visibility }}\n\n### Blended Template:\n{% set visibility = \"\" %} {% if shared %} {% set visibility = \"public\" %} {% else %} {% set visibility = \"private\" %} {% endif %} {{ \"Status: \" ~ visibility }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n23. concatenate \"Mr.\" and variable \"surname\" and print it\n\n### Jinja Template:\n{{ \"Mr. \" + surname }}\n\n### Blended Template:\n{% set temp = \"Mr. \" ~  surname % }{% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n35. print the string \"Success!\"\n\n### Jinja Template:\n{{ \"Success!\" }}\n\n### Blended Template:\n{% print  \"Success!\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n149. concatenate \"Hello \" and variable \"name\", then convert the result to title case and render it\n\n### Jinja Template:\n{{ (\"Hello \" + name) | title }}\n\n### Blended Template:\n{{ title(\"Hello \" ~ name)  }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n196. truncate variable \"response_time\", then concatenate with \"ms\" and print \"Response: \" + result\n\n### Jinja Template:\n{{ 'Response: ' + response_time | truncate(3) + 'ms' }}\n\n### Blended Template:\n{% set temp= 'Response: ' ~ truncate(response_time) ~ 'ms'%}\n{% print temp%}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n176. convert variable \"environment\" to lowercase, then set variable \"env_name\" to result + \"_env\", then print it\n\n### Jinja Template:\n{% set env_name = environment | lower ~ \"_env\" %}\n{{ env_name }}\n\n### Blended Template:\n{% set env_name = lower(environment) ~ \"_env\" %} {% print env_name %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n215. Write a template to create a range from variable \"start\" to variable \"end\" and store in \"sequence\", then print \"Range created\"\n\n### Jinja Template:\n{% set sequence = range(start, end) %}\nRange created\n\n### Blended Template:\n{% set sequence = range(start, end) %}\n{% print \"Range created\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n175. concatenate \"Build \" and variable \"build_number\", then convert to uppercase and render it\n\n### Jinja Template:\n{{ ('Build ' + build_number) | upper }}\n\n### Blended Template:\n{{ upper('Build ' ~ build_number) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n145. convert variable \"email\" to lowercase, then concatenate with \"@domain.com\" and print it\n\n### Jinja Template:\n{{ email|lower }}@domain.com\n\n### Blended Template:\n{% set temp = lower(email)  ~ \"@domain.com\" %} {% print temp %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n156. concatenate variable \"first_name\" and \"last_name\" with space, then convert to title case and render it\n\n### Jinja Template:\n{{ first_name|title }} {{ last_name|title }}\n\n### Blended Template:\n{{ title(first_name ~ \" \" ~ last_name) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n154. convert \"CUSTOMER SUPPORT\" to title case, then set variable \"department\" to obtained result, then render with \" Team\"\n\n### Jinja Template:\n{% set department = \"CUSTOMER SUPPORT\" | title %}\n{{ department ~ \" Team\" }}\n\n### Blended Template:\n{% set department = title(\"CUSTOMER SUPPORT\") %} {{ department ~ \" Team\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n151. convert variable \"title\" to lowercase, then set \"formatted_title\" to result + \" - draft\", then print it\n\n### Jinja Template:\n{% set formatted_title = title.lower() + \" - draft\" %}\n{{ formatted_title }}\n\n### Blended Template:\nError : Title is a reserved keyword in Blended. It cannot be used as variable name\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n193. concatenate variable \"hostname\" and \":\" and variable \"port\", then set \"endpoint\" to result, then render it\n\n### Jinja Template:\n{% set endpoint = hostname + \":\" + port %}\n{{endpoint}}\n\n### Blended Template:\n{% set endpoint = hostname ~ \":\" ~ port %}\n{{endpoint}}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n31. convert the number 0 to string and store in \"zero_str\"\n\n### Jinja Template:\n{% set zero_str = \"0\" %}\n\n### Blended Template:\n{% set zero_str = \"0\" %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your task is to convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\n10. truncate the number 3.14159 and print it\n\n### Jinja Template:\n{{ 3.14159 | round(0) }}\n\n### Blended Template:\n{% print truncate(3.14159) %}\n\n"}
