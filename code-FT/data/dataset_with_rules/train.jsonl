{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function title: The Jinja filter | title is replaced by the title() function, which only accepts a string argument.### Task Description:\nwrite a valid jinja template to set \"about us\" as title case and print it.\n\n### Jinja Template (for reference):\n{{ \"about us\" | title }}\n\n### Blended Template:\n{% print title(\"about us\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function lower: The Jinja filter | lower is replaced by a function call: lower(variable).### Task Description:\nwrite a valid jinja template to convert variable named \"name\" to lower and print it\n\n### Jinja Template (for reference):\n{{ name | lower }}\n\n### Blended Template:\n{% print lower(name) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function string: The Jinja filter | string is replaced by a function call: string(variable).### Task Description:\nCreate a Jinja2 template expression that takes a list named listA = [1, 2, 3] and formats it into the string: \"one(1), two(2), three(3)\" Use the string filter method to substitute list elements into the placeholders \"one(%s), two(%s), three(%s)\".\n\n### Jinja Template (for reference):\n{% set listA = [1, 2, 3] %}\n{{ listA|string(\"one(%s), two(%s), three(%s)\") }}\n\n### Blended Template:\n{% set listA = [1, 2, 3] %}\n{{ listA|string(\"one(%s), two(%s), three(%s)\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Print: The {% print ... %} statement only accepts a string or a number as input.### Task Description:\nWrite a jinja template to print null value\n\n### Jinja Template (for reference):\n{{ null }} \n\n### Blended Template:\nBlended template cannot be generated\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Render: A render expression {{ ... }} must resolve to a string or a number.### Task Description:\nWrite a jinja template to render \"Temperature\" and 36.5.\n\n### Jinja Template (for reference):\n{{ \"Temperature\" }}   \n{{ 36.5 }}           \n\n### Blended Template:\n{{ \"Temperature\" }}   \n{{ 36.5 }}           \n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function title: The Jinja filter | title is replaced by the title() function, which only accepts a string argument.### Task Description:\nwrite a valid jinja template to set \"user profile\" as title case and print it.\n\n### Jinja Template (for reference):\n{{ \"user profile\" | title }}\n\n### Blended Template:\n{% print title(\"user profile\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Print: The {% print ... %} statement only accepts a string or a number as input.### Task Description:\nWrite a jinja template to print boolean value\n\n### Jinja Template (for reference):\n{{ true }} \n\n### Blended Template:\nBlended template cannot be generated\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function string: The Jinja filter | string is replaced by a function call: string(variable).### Task Description:\nwrite a valid jinja template to convert number 42 to string and set it to variable num_str.\n\n### Jinja Template (for reference):\n{% set num_str = 42 | string %}\n\n### Blended Template:\n{% set num_str = 42 | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function title: The Jinja filter | title is replaced by the title() function, which only accepts a string argument.### Task Description:\nwrite a valid jinja template to set \"Website\" as title and render it.\n\n### Jinja Template (for reference):\n{{ \"Website\" | title }}\n\n### Blended Template:\n{{ title(\"Website\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function truncate: The Jinja filter | truncate is replaced by a function call: truncate(variable).### Task Description:\nwrite a valid jinja template to truncate the number \"num\" and print it\n\n### Jinja Template (for reference):\n{{ num | truncate }}\n\n### Blended Template:\n{% print truncate(num) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function string: The Jinja filter | string is replaced by a function call: string(variable).### Task Description:\nwrite a valid jinja template to convert variable named \"num\" to string and set it to variable str.\n\n### Jinja Template (for reference):\n{% set str = num | string %}\n\n### Blended Template:\n{% set str = num | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function title: The Jinja filter | title is replaced by the title() function, which only accepts a string argument.### Task Description:\nwrite a valid jinja template to convert variable \"page_name\" to title case and print it.\n\n### Jinja Template (for reference):\n{{ page_name | title }}\n\n### Blended Template:\n{% print title(page_name) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Render: A render expression {{ ... }} must resolve to a string or a number.### Task Description:\nWrite a jinja template to render a list of numbers\n\n### Jinja Template (for reference):\n{{ [10, 20, 30] }} \n\n### Blended Template:\nBlended template cannot be generated\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function upper: The Jinja filter | upper is replaced by a function call: upper(variable).### Task Description:\nwrite a valid jinja template to convert variable \"country\" to uppercase and store in caps_country variable\n\n### Jinja Template (for reference):\n{% set caps_country = country | upper %}\n\n### Blended Template:\n{% set caps_country = upper(country) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function truncate: The Jinja filter | truncate is replaced by a function call: truncate(variable).### Task Description:\nwrite a valid jinja template to truncate 3.14159 and print it\n\n### Jinja Template (for reference):\n{{ 3.14159 | truncate }}\n\n### Blended Template:\n{% print truncate(3.14159) %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Print: The {% print ... %} statement only accepts a string or a number as input.### Task Description:\nWrite a jinja template to print an object {name: \"John\"}\n\n### Jinja Template (for reference):\n{{ {name: \"John\"} }} \n\n### Blended Template:\nBlended template cannot be generated\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Print: The {% print ... %} statement only accepts a string or a number as input.### Task Description:\nWrite a jinja template to print a list [1, 2, 3]\n\n### Jinja Template (for reference):\n{{ [1, 2, 3] }} \n\n### Blended Template:\nnan\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function string: The Jinja filter | string is replaced by a function call: string(variable).### Task Description:\nCreate a Jinja2 template that takes a list named colors = [\"red\", \"green\", \"blue\"] and formats it into \"Color1: red, Color2: green, Color3: blue\" using string filter.\n\n### Jinja Template (for reference):\n{% set colors = [\"red\", \"green\", \"blue\"] %}\n{{ colors|string(\"Color1: %s, Color2: %s, Color3: %s\") }}\n\n### Blended Template:\n{% set colors = [\"red\", \"green\", \"blue\"] %}\n{{ colors|string(\"Color1: %s, Color2: %s, Color3: %s\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function string: The Jinja filter | string is replaced by a function call: string(variable).### Task Description:\nwrite a valid jinja template to convert variable \"age\" to string and set it to variable age_str.\n\n### Jinja Template (for reference):\n{% set age_str = age | string %}\n\n### Blended Template:\n{% set age_str = age | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Render: A render expression {{ ... }} must resolve to a string or a number.### Task Description:\nWrite a jinja template to render an empty object\n\n### Jinja Template (for reference):\n{{ {} }} \n\n### Blended Template:\nBlended template cannot be generated\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function title: The Jinja filter | title is replaced by the title() function, which only accepts a string argument.### Task Description:\nwrite a valid jinja template to convert variable \"article_title\" to title case and render it.\n\n### Jinja Template (for reference):\n{{ article_title | title }}\n\n### Blended Template:\n{{ title(article_title) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Render: A render expression {{ ... }} must resolve to a string or a number.### Task Description:\nWrite a jinja template to render \"Count\" and 0.\n\n### Jinja Template (for reference):\n{{ \"Count\" }}   \n{{ 0 }}         \n\n### Blended Template:\n{{ \"Count\" }}   \n{{ 0 }}         \n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Scoping: Variables set inside an if/else block must be declared before the block to be used outside of it.### Task Description:\nWrite a jinja template to set 'discount' variable to 10 if is_member is true else set 'discount' to 0. Render it after the conditional block\n\n### Jinja Template (for reference):\n{% if is_member %}\n  {% set discount = 10 %}\n{% else %}\n  {% set discount = 0 %}\n{% endif %}\n{{ discount }}\n\n### Blended Template:\n{% set discount = 0 %}\n{% if is_member %}\n  {% set discount = 10 %}\n{% else %}\n  {% set discount = 0 %}\n{% endif %}\n{{ discount }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function title: The Jinja filter | title is replaced by the title() function, which only accepts a string argument.### Task Description:\nwrite a valid jinja template to set \"home page\" as title case and render it.\n\n### Jinja Template (for reference):\n{{ \"home page\" | title }}\n\n### Blended Template:\n{{ title(\"home page\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Render: A render expression {{ ... }} must resolve to a string or a number.### Task Description:\nWrite a jinja template to render \"Hello World\" and 42.\n\n### Jinja Template (for reference):\n{{ \"Hello World\" }}   \n{{ 42 }}             \n\n### Blended Template:\n{{ \"Hello World\" }}   \n{{ 42 }}             \n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n String Concatenation: The + operator is invalid for strings; use the tilde (~) operator instead (e.g., \"Hello\" ~ \"World\").### Task Description:\nwrite a jinja template which concatenates \"Thank\" and \"You\" and print the result\n\n### Jinja Template (for reference):\n{{ \"Thank\" + \"You\" }}\n\n### Blended Template:\n{% set result = \"Thank\" ~ \"You\" %} {% print result %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function title: The Jinja filter | title is replaced by the title() function, which only accepts a string argument.### Task Description:\nwrite a valid jinja template to set \"contact us\" as title case and render it.\n\n### Jinja Template (for reference):\n{{ \"contact us\" | title }}\n\n### Blended Template:\n{{ title(\"contact us\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Render: A render expression {{ ... }} must resolve to a string or a number.### Task Description:\nWrite a jinja template to render \"Status\" and 200.\n\n### Jinja Template (for reference):\n{{ \"Status\" }}   \n{{ 200 }}        \n\n### Blended Template:\n{{ \"Status\" }}   \n{{ 200 }}        \n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n String Concatenation: The + operator is invalid for strings; use the tilde (~) operator instead (e.g., \"Hello\" ~ \"World\").### Task Description:\nwrite a jinja template which concatenates \"Hello\" and \"World\" and render the result\n\n### Jinja Template (for reference):\n{{ \"Hello\" + \"World\" }}\n\n### Blended Template:\n{{ \"Hello\" ~ \"World\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function title: The Jinja filter | title is replaced by the title() function, which only accepts a string argument.### Task Description:\nwrite a valid jinja template to set \"Website\" as title and print it.\n\n### Jinja Template (for reference):\n{{ \"Website\" | title }}\n\n### Blended Template:\n{% print title(\"Website\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function string: The Jinja filter | string is replaced by a function call: string(variable).### Task Description:\nCreate a Jinja2 template that takes a list named scores = [85, 92, 78] and formats it into \"Test1(85), Test2(92), Test3(78)\" using string filter.\n\n### Jinja Template (for reference):\n{% set scores = [85, 92, 78] %}\n{{ scores|string(\"Test1(%s), Test2(%s), Test3(%s)\") }}\n\n### Blended Template:\n{% set scores = [85, 92, 78] %}\n{{ scores|string(\"Test1(%s), Test2(%s), Test3(%s)\") }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Render: A render expression {{ ... }} must resolve to a string or a number.### Task Description:\nWrite a jinja template to render boolean false\n\n### Jinja Template (for reference):\n{{ false }} \n\n### Blended Template:\nBlended template cannot be generated\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Scoping: Variables set inside an if/else block must be declared before the block to be used outside of it.### Task Description:\nWrite a jinja template to set 'msg' variable to \"Hi\" if condition is true else set 'msg' variable to \"Hello\". Print it after conditional block\n\n### Jinja Template (for reference):\n{% if condition %}\n  {% set msg = \"Hi\" %}\n{% else %}\n  {% set msg = \"Hello\" %}\n{% endif %}\n{{ msg }}  \n\n### Blended Template:\n{% set msg = \"temp\" %} \n{% if condition %}\n  {% set msg = \"Hi\" %}\n{% else %}\n  {% set msg = \"Hello\" %}\n{% endif %}\n{% print msg %}  \n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function string: The Jinja filter | string is replaced by a function call: string(variable).### Task Description:\nwrite a valid jinja template to convert variable \"score\" to string and set it to variable score_text.\n\n### Jinja Template (for reference):\n{% set score_text = score | string %}\n\n### Blended Template:\n{% set score_text = score | string %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Print: The {% print ... %} statement only accepts a string or a number as input.### Task Description:\nWrite a jinja template to print \"Hello World\" and 42.\n\n### Jinja Template (for reference):\n{{ \"Hello World\" }}   \n{{ 42 }}             \n\n### Blended Template:\n{% print \"Hello World\" %}   \n{% print 42 %}             \n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n String Concatenation: The + operator is invalid for strings; use the tilde (~) operator instead (e.g., \"Hello\" ~ \"World\").### Task Description:\nwrite a jinja template which combines variable \"greeting\" and \"name\" and print the result\n\n### Jinja Template (for reference):\n{{ greeting + name }}\n\n### Blended Template:\n{% set result = greeting ~ name %} {% print result %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n String Concatenation: The + operator is invalid for strings; use the tilde (~) operator instead (e.g., \"Hello\" ~ \"World\").### Task Description:\nwrite a jinja template which adds two strings : \"a\" and \"b\" and render the result\n\n### Jinja Template (for reference):\n{{ \"a\" + \"b\" }}\n\n### Blended Template:\n{{ \"a\" ~ \"b\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Render: A render expression {{ ... }} must resolve to a string or a number.### Task Description:\nWrite a jinja template to render boolean value\n\n### Jinja Template (for reference):\n{{ true }} \n\n### Blended Template:\nBlended template cannot be generated\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function truncate: The Jinja filter | truncate is replaced by a function call: truncate(variable).### Task Description:\nwrite a valid jinja template to truncate the variable \"price\" and render it\n\n### Jinja Template (for reference):\n{{ price | truncate }}\n\n### Blended Template:\n{{ truncate(price) }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Function lower: The Jinja filter | lower is replaced by a function call: lower(variable).### Task Description:\nwrite a valid jinja template to convert \"USERNAME\" to lowercase and print it\n\n### Jinja Template (for reference):\n{{ \"USERNAME\" | lower }}\n\n### Blended Template:\n{% print lower(\"USERNAME\") %}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n String Concatenation: The + operator is invalid for strings; use the tilde (~) operator instead (e.g., \"Hello\" ~ \"World\").### Task Description:\nwrite a jinja template which joins \"Good\" and \"Morning\" and render the result\n\n### Jinja Template (for reference):\n{{ \"Good\" + \"Morning\" }}\n\n### Blended Template:\n{{ \"Good\" ~ \"Morning\" }}\n\n"}
{"text": "Instruction: As an expert in code conversion, your primary task is to generate Blended template code and learn the governing rule for corresponding blended template, given a programming task description. Blended is a variant of Jinja with strict type checking and scoping rules. For learning purposes, you will also be provided with the equivalent Jinja template.\n\n### Rules for Conversion:\n Strict Print: The {% print ... %} statement only accepts a string or a number as input.### Task Description:\nWrite a jinja template to print \"Price:\" and 99.99.\n\n### Jinja Template (for reference):\n{{ \"Price:\" }}   \n{{ 99.99 }}      \n\n### Blended Template:\n{% print \"Price:\" %}   \n{% print 99.99 %}      \n\n"}
