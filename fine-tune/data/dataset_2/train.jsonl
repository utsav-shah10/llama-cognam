{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable named \"name\" to lower and print it\n\n### Jinja Template:\n{{ name | lower }}\n\n### Blended Template:\n{% print lower(name) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render a list of numbers\n\n### Jinja Template:\n{{ [10, 20, 30] }} \n\n### Blended Template:\nBlended template cannot be generated"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nCreate a Jinja2 template that takes a list named names = [\"Alice\", \"Bob\", \"Charlie\"] and formats it into \"User: Alice, Admin: Bob, Guest: Charlie\" using string filter.\n\n### Jinja Template:\n{% set names = [\"Alice\", \"Bob\", \"Charlie\"] %}\n{{ names|string(\"User: %s, Admin: %s, Guest: %s\") }}\n\n### Blended Template:\n{% set names = [\"Alice\", \"Bob\", \"Charlie\"] %}\n{{ names|string(\"User: %s, Admin: %s, Guest: %s\") }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nCreate a Jinja2 template expression that takes a list named listA = [1, 2, 3] and formats it into the string: \"one(1), two(2), three(3)\" Use the string filter method to substitute list elements into the placeholders \"one(%s), two(%s), three(%s)\".\n\n### Jinja Template:\n{% set listA = [1, 2, 3] %}\n{{ listA|string(\"one(%s), two(%s), three(%s)\") }}\n\n### Blended Template:\n{% set listA = [1, 2, 3] %}\n{{ listA|string(\"one(%s), two(%s), three(%s)\") }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which concatenates \"Thank\" and \"You\" and print the result\n\n### Jinja Template:\n{{ \"Thank\" + \"You\" }}\n\n### Blended Template:\n{% set result = \"Thank\" ~ \"You\" %} {% print result %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to truncate 3.14159 and print it\n\n### Jinja Template:\n{{ 3.14159 | truncate }}\n\n### Blended Template:\n{% print truncate(3.14159) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"age\" to string and set it to variable age_str.\n\n### Jinja Template:\n{% set age_str = age | string %}\n\n### Blended Template:\n{% set age_str = age | string %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which adds two strings : \"a\" and \"b\" and print the result\n\n### Jinja Template:\n{{ \"a\" + \"b\" }}\n\n### Blended Template:\n{% set result = \"a\" ~ \"b\" %} {% print result %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which joins \"Happy\" and \"Birthday\" and print the result\n\n### Jinja Template:\n{{ \"Happy\" + \"Birthday\" }}\n\n### Blended Template:\n{% set result = \"Happy\" ~ \"Birthday\" %} {% print result %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print an object {name: \"John\"}\n\n### Jinja Template:\n{{ {name: \"John\"} }} \n\n### Blended Template:\nBlended template cannot be generated"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable named \"num\" to string and set it to variable str.\n\n### Jinja Template:\n{% set str = num | string %}\n\n### Blended Template:\n{% set str = num | string %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render an empty object\n\n### Jinja Template:\n{{ {} }} \n\n### Blended Template:\nBlended template cannot be generated"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"score\" to string and set it to variable score_text.\n\n### Jinja Template:\n{% set score_text = score | string %}\n\n### Blended Template:\n{% set score_text = score | string %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which joins \"Good\" and \"Morning\" and render the result\n\n### Jinja Template:\n{{ \"Good\" + \"Morning\" }}\n\n### Blended Template:\n{{ \"Good\" ~ \"Morning\" }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert number 42 to string and set it to variable num_str.\n\n### Jinja Template:\n{% set num_str = 42 | string %}\n\n### Blended Template:\n{% set num_str = 42 | string %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print the name \"Alice\" and age 25.\n\n### Jinja Template:\n{{ \"Alice\" }}   \n{{ 25 }}       \n\n### Blended Template:\n{% print \"Alice\" %}   \n{% print 25 %}       "}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render boolean false\n\n### Jinja Template:\n{{ false }} \n\n### Blended Template:\nBlended template cannot be generated"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to set 'grade' variable to \"Pass\" if score >= 50 else set 'grade' to \"Fail\". Print it after conditional block\n\n### Jinja Template:\n{% if score >= 50 %}\n  {% set grade = \"Pass\" %}\n{% else %}\n  {% set grade = \"Fail\" %}\n{% endif %}\n{{ grade }}\n\n### Blended Template:\n{% set grade = \"\" %}\n{% if score >= 50 %}\n  {% set grade = \"Pass\" %}\n{% else %}\n  {% set grade = \"Fail\" %}\n{% endif %}\n{% print grade %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print null value\n\n### Jinja Template:\n{{ null }} \n\n### Blended Template:\nBlended template cannot be generated"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render \"Count\" and 0.\n\n### Jinja Template:\n{{ \"Count\" }}   \n{{ 0 }}         \n\n### Blended Template:\n{{ \"Count\" }}   \n{{ 0 }}         "}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"article_title\" to title case and render it.\n\n### Jinja Template:\n{{ article_title | title }}\n\n### Blended Template:\n{{ title(article_title) }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to set \"home page\" as title case and render it.\n\n### Jinja Template:\n{{ \"home page\" | title }}\n\n### Blended Template:\n{{ title(\"home page\") }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"city\" to uppercase and render it\n\n### Jinja Template:\n{{ city | upper }}\n\n### Blended Template:\n{{ upper(city) }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render \"Hello World\" and 42.\n\n### Jinja Template:\n{{ \"Hello World\" }}   \n{{ 42 }}             \n\n### Blended Template:\n{{ \"Hello World\" }}   \n{{ 42 }}             "}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to render \"Temperature\" and 36.5.\n\n### Jinja Template:\n{{ \"Temperature\" }}   \n{{ 36.5 }}           \n\n### Blended Template:\n{{ \"Temperature\" }}   \n{{ 36.5 }}           "}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to set \"contact us\" as title case and render it.\n\n### Jinja Template:\n{{ \"contact us\" | title }}\n\n### Blended Template:\n{{ title(\"contact us\") }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to set \"Website\" as title and print it.\n\n### Jinja Template:\n{{ \"Website\" | title }}\n\n### Blended Template:\n{% print title(\"Website\") %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable named \"name\" to upper and print it\n\n### Jinja Template:\n{{ name | upper }}\n\n### Blended Template:\n{% print upper(name) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to set \"about us\" as title case and print it.\n\n### Jinja Template:\n{{ \"about us\" | title }}\n\n### Blended Template:\n{% print title(\"about us\") %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert \"hello world\" to uppercase and print it\n\n### Jinja Template:\n{{ \"hello world\" | upper }}\n\n### Blended Template:\n{% print upper(\"hello world\") %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to set \"Website\" as title and render it.\n\n### Jinja Template:\n{{ \"Website\" | title }}\n\n### Blended Template:\n{{ title(\"Website\") }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nCreate a Jinja2 template that takes a list named colors = [\"red\", \"green\", \"blue\"] and formats it into \"Color1: red, Color2: green, Color3: blue\" using string filter.\n\n### Jinja Template:\n{% set colors = [\"red\", \"green\", \"blue\"] %}\n{{ colors|string(\"Color1: %s, Color2: %s, Color3: %s\") }}\n\n### Blended Template:\n{% set colors = [\"red\", \"green\", \"blue\"] %}\n{{ colors|string(\"Color1: %s, Color2: %s, Color3: %s\") }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"page_name\" to title case and print it.\n\n### Jinja Template:\n{{ page_name | title }}\n\n### Blended Template:\n{% print title(page_name) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"title\" to lowercase and render it\n\n### Jinja Template:\n{{ title | lower }}\n\n### Blended Template:\n{{ lower(title) }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to truncate the number \"num\" and print it\n\n### Jinja Template:\n{{ num | truncate }}\n\n### Blended Template:\n{% print truncate(num) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to set 'msg' variable to \"Hi\" if condition is true else set 'msg' variable to \"Hello\". Print it after conditional block\n\n### Jinja Template:\n{% if condition %}\n  {% set msg = \"Hi\" %}\n{% else %}\n  {% set msg = \"Hello\" %}\n{% endif %}\n{{ msg }}  \n\n### Blended Template:\n{% set msg = \"temp\" %} \n{% if condition %}\n  {% set msg = \"Hi\" %}\n{% else %}\n  {% set msg = \"Hello\" %}\n{% endif %}\n{% print msg %}  "}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which adds two strings : \"a\" and \"b\" and render the result\n\n### Jinja Template:\n{{ \"a\" + \"b\" }}\n\n### Blended Template:\n{{ \"a\" ~ \"b\" }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which concatenates \"Hello\" and \"World\" and render the result\n\n### Jinja Template:\n{{ \"Hello\" + \"World\" }}\n\n### Blended Template:\n{{ \"Hello\" ~ \"World\" }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a jinja template which combines variable \"first_name\" and \"last_name\" and render the result\n\n### Jinja Template:\n{{ first_name + last_name }}\n\n### Blended Template:\n{{ first_name ~ last_name }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to convert variable \"country\" to uppercase and store in caps_country variable\n\n### Jinja Template:\n{% set caps_country = country | upper %}\n\n### Blended Template:\n{% set caps_country = upper(country) %}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nwrite a valid jinja template to truncate the variable \"price\" and render it\n\n### Jinja Template:\n{{ price | truncate }}\n\n### Blended Template:\n{{ truncate(price) }}"}
{"text": "Instruction: Convert the provided Jinja template to its equivalent Blended template. Blended is a variant of Jinja with strict type checking and scoping rules.\n\n### Task Description:\nWrite a jinja template to print boolean value\n\n### Jinja Template:\n{{ true }} \n\n### Blended Template:\nBlended template cannot be generated"}
